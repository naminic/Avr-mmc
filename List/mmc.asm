
;CodeVisionAVR C Compiler V2.05.3 Standard
;(C) Copyright 1998-2011 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com

;Chip type                : ATmega32
;Program type             : Application
;Clock frequency          : 8.000000 MHz
;Memory model             : Small
;Optimize for             : Size
;(s)printf features       : int, width
;(s)scanf features        : int, width
;External RAM size        : 0
;Data Stack size          : 512 byte(s)
;Heap size                : 0 byte(s)
;Promote 'char' to 'int'  : No
;'char' is unsigned       : Yes
;8 bit enums              : No
;Global 'const' stored in FLASH     : Yes
;Enhanced function parameter passing: Yes
;Enhanced core instructions         : On
;Smart register allocation          : On
;Automatic register allocation      : On

	#pragma AVRPART ADMIN PART_NAME ATmega32
	#pragma AVRPART MEMORY PROG_FLASH 32768
	#pragma AVRPART MEMORY EEPROM 1024
	#pragma AVRPART MEMORY INT_SRAM SIZE 2143
	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60

	#define CALL_SUPPORTED 1

	.LISTMAC
	.EQU UDRE=0x5
	.EQU RXC=0x7
	.EQU USR=0xB
	.EQU UDR=0xC
	.EQU SPSR=0xE
	.EQU SPDR=0xF
	.EQU EERE=0x0
	.EQU EEWE=0x1
	.EQU EEMWE=0x2
	.EQU EECR=0x1C
	.EQU EEDR=0x1D
	.EQU EEARL=0x1E
	.EQU EEARH=0x1F
	.EQU WDTCR=0x21
	.EQU MCUCR=0x35
	.EQU GICR=0x3B
	.EQU SPL=0x3D
	.EQU SPH=0x3E
	.EQU SREG=0x3F

	.DEF R0X0=R0
	.DEF R0X1=R1
	.DEF R0X2=R2
	.DEF R0X3=R3
	.DEF R0X4=R4
	.DEF R0X5=R5
	.DEF R0X6=R6
	.DEF R0X7=R7
	.DEF R0X8=R8
	.DEF R0X9=R9
	.DEF R0XA=R10
	.DEF R0XB=R11
	.DEF R0XC=R12
	.DEF R0XD=R13
	.DEF R0XE=R14
	.DEF R0XF=R15
	.DEF R0X10=R16
	.DEF R0X11=R17
	.DEF R0X12=R18
	.DEF R0X13=R19
	.DEF R0X14=R20
	.DEF R0X15=R21
	.DEF R0X16=R22
	.DEF R0X17=R23
	.DEF R0X18=R24
	.DEF R0X19=R25
	.DEF R0X1A=R26
	.DEF R0X1B=R27
	.DEF R0X1C=R28
	.DEF R0X1D=R29
	.DEF R0X1E=R30
	.DEF R0X1F=R31

	.EQU __SRAM_START=0x0060
	.EQU __SRAM_END=0x085F
	.EQU __DSTACK_SIZE=0x0200
	.EQU __HEAP_SIZE=0x0000
	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1

	.MACRO __CPD1N
	CPI  R30,LOW(@0)
	LDI  R26,HIGH(@0)
	CPC  R31,R26
	LDI  R26,BYTE3(@0)
	CPC  R22,R26
	LDI  R26,BYTE4(@0)
	CPC  R23,R26
	.ENDM

	.MACRO __CPD2N
	CPI  R26,LOW(@0)
	LDI  R30,HIGH(@0)
	CPC  R27,R30
	LDI  R30,BYTE3(@0)
	CPC  R24,R30
	LDI  R30,BYTE4(@0)
	CPC  R25,R30
	.ENDM

	.MACRO __CPWRR
	CP   R@0,R@2
	CPC  R@1,R@3
	.ENDM

	.MACRO __CPWRN
	CPI  R@0,LOW(@2)
	LDI  R30,HIGH(@2)
	CPC  R@1,R30
	.ENDM

	.MACRO __ADDB1MN
	SUBI R30,LOW(-@0-(@1))
	.ENDM

	.MACRO __ADDB2MN
	SUBI R26,LOW(-@0-(@1))
	.ENDM

	.MACRO __ADDW1MN
	SUBI R30,LOW(-@0-(@1))
	SBCI R31,HIGH(-@0-(@1))
	.ENDM

	.MACRO __ADDW2MN
	SUBI R26,LOW(-@0-(@1))
	SBCI R27,HIGH(-@0-(@1))
	.ENDM

	.MACRO __ADDW1FN
	SUBI R30,LOW(-2*@0-(@1))
	SBCI R31,HIGH(-2*@0-(@1))
	.ENDM

	.MACRO __ADDD1FN
	SUBI R30,LOW(-2*@0-(@1))
	SBCI R31,HIGH(-2*@0-(@1))
	SBCI R22,BYTE3(-2*@0-(@1))
	.ENDM

	.MACRO __ADDD1N
	SUBI R30,LOW(-@0)
	SBCI R31,HIGH(-@0)
	SBCI R22,BYTE3(-@0)
	SBCI R23,BYTE4(-@0)
	.ENDM

	.MACRO __ADDD2N
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	SBCI R24,BYTE3(-@0)
	SBCI R25,BYTE4(-@0)
	.ENDM

	.MACRO __SUBD1N
	SUBI R30,LOW(@0)
	SBCI R31,HIGH(@0)
	SBCI R22,BYTE3(@0)
	SBCI R23,BYTE4(@0)
	.ENDM

	.MACRO __SUBD2N
	SUBI R26,LOW(@0)
	SBCI R27,HIGH(@0)
	SBCI R24,BYTE3(@0)
	SBCI R25,BYTE4(@0)
	.ENDM

	.MACRO __ANDBMNN
	LDS  R30,@0+(@1)
	ANDI R30,LOW(@2)
	STS  @0+(@1),R30
	.ENDM

	.MACRO __ANDWMNN
	LDS  R30,@0+(@1)
	ANDI R30,LOW(@2)
	STS  @0+(@1),R30
	LDS  R30,@0+(@1)+1
	ANDI R30,HIGH(@2)
	STS  @0+(@1)+1,R30
	.ENDM

	.MACRO __ANDD1N
	ANDI R30,LOW(@0)
	ANDI R31,HIGH(@0)
	ANDI R22,BYTE3(@0)
	ANDI R23,BYTE4(@0)
	.ENDM

	.MACRO __ANDD2N
	ANDI R26,LOW(@0)
	ANDI R27,HIGH(@0)
	ANDI R24,BYTE3(@0)
	ANDI R25,BYTE4(@0)
	.ENDM

	.MACRO __ORBMNN
	LDS  R30,@0+(@1)
	ORI  R30,LOW(@2)
	STS  @0+(@1),R30
	.ENDM

	.MACRO __ORWMNN
	LDS  R30,@0+(@1)
	ORI  R30,LOW(@2)
	STS  @0+(@1),R30
	LDS  R30,@0+(@1)+1
	ORI  R30,HIGH(@2)
	STS  @0+(@1)+1,R30
	.ENDM

	.MACRO __ORD1N
	ORI  R30,LOW(@0)
	ORI  R31,HIGH(@0)
	ORI  R22,BYTE3(@0)
	ORI  R23,BYTE4(@0)
	.ENDM

	.MACRO __ORD2N
	ORI  R26,LOW(@0)
	ORI  R27,HIGH(@0)
	ORI  R24,BYTE3(@0)
	ORI  R25,BYTE4(@0)
	.ENDM

	.MACRO __DELAY_USB
	LDI  R24,LOW(@0)
__DELAY_USB_LOOP:
	DEC  R24
	BRNE __DELAY_USB_LOOP
	.ENDM

	.MACRO __DELAY_USW
	LDI  R24,LOW(@0)
	LDI  R25,HIGH(@0)
__DELAY_USW_LOOP:
	SBIW R24,1
	BRNE __DELAY_USW_LOOP
	.ENDM

	.MACRO __GETD1S
	LDD  R30,Y+@0
	LDD  R31,Y+@0+1
	LDD  R22,Y+@0+2
	LDD  R23,Y+@0+3
	.ENDM

	.MACRO __GETD2S
	LDD  R26,Y+@0
	LDD  R27,Y+@0+1
	LDD  R24,Y+@0+2
	LDD  R25,Y+@0+3
	.ENDM

	.MACRO __PUTD1S
	STD  Y+@0,R30
	STD  Y+@0+1,R31
	STD  Y+@0+2,R22
	STD  Y+@0+3,R23
	.ENDM

	.MACRO __PUTD2S
	STD  Y+@0,R26
	STD  Y+@0+1,R27
	STD  Y+@0+2,R24
	STD  Y+@0+3,R25
	.ENDM

	.MACRO __PUTDZ2
	STD  Z+@0,R26
	STD  Z+@0+1,R27
	STD  Z+@0+2,R24
	STD  Z+@0+3,R25
	.ENDM

	.MACRO __CLRD1S
	STD  Y+@0,R30
	STD  Y+@0+1,R30
	STD  Y+@0+2,R30
	STD  Y+@0+3,R30
	.ENDM

	.MACRO __POINTB1MN
	LDI  R30,LOW(@0+(@1))
	.ENDM

	.MACRO __POINTW1MN
	LDI  R30,LOW(@0+(@1))
	LDI  R31,HIGH(@0+(@1))
	.ENDM

	.MACRO __POINTD1M
	LDI  R30,LOW(@0)
	LDI  R31,HIGH(@0)
	LDI  R22,BYTE3(@0)
	LDI  R23,BYTE4(@0)
	.ENDM

	.MACRO __POINTW1FN
	LDI  R30,LOW(2*@0+(@1))
	LDI  R31,HIGH(2*@0+(@1))
	.ENDM

	.MACRO __POINTD1FN
	LDI  R30,LOW(2*@0+(@1))
	LDI  R31,HIGH(2*@0+(@1))
	LDI  R22,BYTE3(2*@0+(@1))
	LDI  R23,BYTE4(2*@0+(@1))
	.ENDM

	.MACRO __POINTB2MN
	LDI  R26,LOW(@0+(@1))
	.ENDM

	.MACRO __POINTW2MN
	LDI  R26,LOW(@0+(@1))
	LDI  R27,HIGH(@0+(@1))
	.ENDM

	.MACRO __POINTW2FN
	LDI  R26,LOW(2*@0+(@1))
	LDI  R27,HIGH(2*@0+(@1))
	.ENDM

	.MACRO __POINTD2FN
	LDI  R26,LOW(2*@0+(@1))
	LDI  R27,HIGH(2*@0+(@1))
	LDI  R24,BYTE3(2*@0+(@1))
	LDI  R25,BYTE4(2*@0+(@1))
	.ENDM

	.MACRO __POINTBRM
	LDI  R@0,LOW(@1)
	.ENDM

	.MACRO __POINTWRM
	LDI  R@0,LOW(@2)
	LDI  R@1,HIGH(@2)
	.ENDM

	.MACRO __POINTBRMN
	LDI  R@0,LOW(@1+(@2))
	.ENDM

	.MACRO __POINTWRMN
	LDI  R@0,LOW(@2+(@3))
	LDI  R@1,HIGH(@2+(@3))
	.ENDM

	.MACRO __POINTWRFN
	LDI  R@0,LOW(@2*2+(@3))
	LDI  R@1,HIGH(@2*2+(@3))
	.ENDM

	.MACRO __GETD1N
	LDI  R30,LOW(@0)
	LDI  R31,HIGH(@0)
	LDI  R22,BYTE3(@0)
	LDI  R23,BYTE4(@0)
	.ENDM

	.MACRO __GETD2N
	LDI  R26,LOW(@0)
	LDI  R27,HIGH(@0)
	LDI  R24,BYTE3(@0)
	LDI  R25,BYTE4(@0)
	.ENDM

	.MACRO __GETB1MN
	LDS  R30,@0+(@1)
	.ENDM

	.MACRO __GETB1HMN
	LDS  R31,@0+(@1)
	.ENDM

	.MACRO __GETW1MN
	LDS  R30,@0+(@1)
	LDS  R31,@0+(@1)+1
	.ENDM

	.MACRO __GETD1MN
	LDS  R30,@0+(@1)
	LDS  R31,@0+(@1)+1
	LDS  R22,@0+(@1)+2
	LDS  R23,@0+(@1)+3
	.ENDM

	.MACRO __GETBRMN
	LDS  R@0,@1+(@2)
	.ENDM

	.MACRO __GETWRMN
	LDS  R@0,@2+(@3)
	LDS  R@1,@2+(@3)+1
	.ENDM

	.MACRO __GETWRZ
	LDD  R@0,Z+@2
	LDD  R@1,Z+@2+1
	.ENDM

	.MACRO __GETD2Z
	LDD  R26,Z+@0
	LDD  R27,Z+@0+1
	LDD  R24,Z+@0+2
	LDD  R25,Z+@0+3
	.ENDM

	.MACRO __GETB2MN
	LDS  R26,@0+(@1)
	.ENDM

	.MACRO __GETW2MN
	LDS  R26,@0+(@1)
	LDS  R27,@0+(@1)+1
	.ENDM

	.MACRO __GETD2MN
	LDS  R26,@0+(@1)
	LDS  R27,@0+(@1)+1
	LDS  R24,@0+(@1)+2
	LDS  R25,@0+(@1)+3
	.ENDM

	.MACRO __PUTB1MN
	STS  @0+(@1),R30
	.ENDM

	.MACRO __PUTW1MN
	STS  @0+(@1),R30
	STS  @0+(@1)+1,R31
	.ENDM

	.MACRO __PUTD1MN
	STS  @0+(@1),R30
	STS  @0+(@1)+1,R31
	STS  @0+(@1)+2,R22
	STS  @0+(@1)+3,R23
	.ENDM

	.MACRO __PUTB1EN
	LDI  R26,LOW(@0+(@1))
	LDI  R27,HIGH(@0+(@1))
	CALL __EEPROMWRB
	.ENDM

	.MACRO __PUTW1EN
	LDI  R26,LOW(@0+(@1))
	LDI  R27,HIGH(@0+(@1))
	CALL __EEPROMWRW
	.ENDM

	.MACRO __PUTD1EN
	LDI  R26,LOW(@0+(@1))
	LDI  R27,HIGH(@0+(@1))
	CALL __EEPROMWRD
	.ENDM

	.MACRO __PUTBR0MN
	STS  @0+(@1),R0
	.ENDM

	.MACRO __PUTBMRN
	STS  @0+(@1),R@2
	.ENDM

	.MACRO __PUTWMRN
	STS  @0+(@1),R@2
	STS  @0+(@1)+1,R@3
	.ENDM

	.MACRO __PUTBZR
	STD  Z+@1,R@0
	.ENDM

	.MACRO __PUTWZR
	STD  Z+@2,R@0
	STD  Z+@2+1,R@1
	.ENDM

	.MACRO __GETW1R
	MOV  R30,R@0
	MOV  R31,R@1
	.ENDM

	.MACRO __GETW2R
	MOV  R26,R@0
	MOV  R27,R@1
	.ENDM

	.MACRO __GETWRN
	LDI  R@0,LOW(@2)
	LDI  R@1,HIGH(@2)
	.ENDM

	.MACRO __PUTW1R
	MOV  R@0,R30
	MOV  R@1,R31
	.ENDM

	.MACRO __PUTW2R
	MOV  R@0,R26
	MOV  R@1,R27
	.ENDM

	.MACRO __ADDWRN
	SUBI R@0,LOW(-@2)
	SBCI R@1,HIGH(-@2)
	.ENDM

	.MACRO __ADDWRR
	ADD  R@0,R@2
	ADC  R@1,R@3
	.ENDM

	.MACRO __SUBWRN
	SUBI R@0,LOW(@2)
	SBCI R@1,HIGH(@2)
	.ENDM

	.MACRO __SUBWRR
	SUB  R@0,R@2
	SBC  R@1,R@3
	.ENDM

	.MACRO __ANDWRN
	ANDI R@0,LOW(@2)
	ANDI R@1,HIGH(@2)
	.ENDM

	.MACRO __ANDWRR
	AND  R@0,R@2
	AND  R@1,R@3
	.ENDM

	.MACRO __ORWRN
	ORI  R@0,LOW(@2)
	ORI  R@1,HIGH(@2)
	.ENDM

	.MACRO __ORWRR
	OR   R@0,R@2
	OR   R@1,R@3
	.ENDM

	.MACRO __EORWRR
	EOR  R@0,R@2
	EOR  R@1,R@3
	.ENDM

	.MACRO __GETWRS
	LDD  R@0,Y+@2
	LDD  R@1,Y+@2+1
	.ENDM

	.MACRO __PUTBSR
	STD  Y+@1,R@0
	.ENDM

	.MACRO __PUTWSR
	STD  Y+@2,R@0
	STD  Y+@2+1,R@1
	.ENDM

	.MACRO __MOVEWRR
	MOV  R@0,R@2
	MOV  R@1,R@3
	.ENDM

	.MACRO __INWR
	IN   R@0,@2
	IN   R@1,@2+1
	.ENDM

	.MACRO __OUTWR
	OUT  @2+1,R@1
	OUT  @2,R@0
	.ENDM

	.MACRO __CALL1MN
	LDS  R30,@0+(@1)
	LDS  R31,@0+(@1)+1
	ICALL
	.ENDM

	.MACRO __CALL1FN
	LDI  R30,LOW(2*@0+(@1))
	LDI  R31,HIGH(2*@0+(@1))
	CALL __GETW1PF
	ICALL
	.ENDM

	.MACRO __CALL2EN
	LDI  R26,LOW(@0+(@1))
	LDI  R27,HIGH(@0+(@1))
	CALL __EEPROMRDW
	ICALL
	.ENDM

	.MACRO __GETW1STACK
	IN   R26,SPL
	IN   R27,SPH
	ADIW R26,@0+1
	LD   R30,X+
	LD   R31,X
	.ENDM

	.MACRO __GETD1STACK
	IN   R26,SPL
	IN   R27,SPH
	ADIW R26,@0+1
	LD   R30,X+
	LD   R31,X+
	LD   R22,X
	.ENDM

	.MACRO __NBST
	BST  R@0,@1
	IN   R30,SREG
	LDI  R31,0x40
	EOR  R30,R31
	OUT  SREG,R30
	.ENDM


	.MACRO __PUTB1SN
	LDD  R26,Y+@0
	LDD  R27,Y+@0+1
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	ST   X,R30
	.ENDM

	.MACRO __PUTW1SN
	LDD  R26,Y+@0
	LDD  R27,Y+@0+1
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	ST   X+,R30
	ST   X,R31
	.ENDM

	.MACRO __PUTD1SN
	LDD  R26,Y+@0
	LDD  R27,Y+@0+1
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	CALL __PUTDP1
	.ENDM

	.MACRO __PUTB1SNS
	LDD  R26,Y+@0
	LDD  R27,Y+@0+1
	ADIW R26,@1
	ST   X,R30
	.ENDM

	.MACRO __PUTW1SNS
	LDD  R26,Y+@0
	LDD  R27,Y+@0+1
	ADIW R26,@1
	ST   X+,R30
	ST   X,R31
	.ENDM

	.MACRO __PUTD1SNS
	LDD  R26,Y+@0
	LDD  R27,Y+@0+1
	ADIW R26,@1
	CALL __PUTDP1
	.ENDM

	.MACRO __PUTB1PMN
	LDS  R26,@0
	LDS  R27,@0+1
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	ST   X,R30
	.ENDM

	.MACRO __PUTW1PMN
	LDS  R26,@0
	LDS  R27,@0+1
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	ST   X+,R30
	ST   X,R31
	.ENDM

	.MACRO __PUTD1PMN
	LDS  R26,@0
	LDS  R27,@0+1
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	CALL __PUTDP1
	.ENDM

	.MACRO __PUTB1PMNS
	LDS  R26,@0
	LDS  R27,@0+1
	ADIW R26,@1
	ST   X,R30
	.ENDM

	.MACRO __PUTW1PMNS
	LDS  R26,@0
	LDS  R27,@0+1
	ADIW R26,@1
	ST   X+,R30
	ST   X,R31
	.ENDM

	.MACRO __PUTD1PMNS
	LDS  R26,@0
	LDS  R27,@0+1
	ADIW R26,@1
	CALL __PUTDP1
	.ENDM

	.MACRO __PUTB1RN
	MOVW R26,R@0
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	ST   X,R30
	.ENDM

	.MACRO __PUTW1RN
	MOVW R26,R@0
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	ST   X+,R30
	ST   X,R31
	.ENDM

	.MACRO __PUTD1RN
	MOVW R26,R@0
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	CALL __PUTDP1
	.ENDM

	.MACRO __PUTB1RNS
	MOVW R26,R@0
	ADIW R26,@1
	ST   X,R30
	.ENDM

	.MACRO __PUTW1RNS
	MOVW R26,R@0
	ADIW R26,@1
	ST   X+,R30
	ST   X,R31
	.ENDM

	.MACRO __PUTD1RNS
	MOVW R26,R@0
	ADIW R26,@1
	CALL __PUTDP1
	.ENDM

	.MACRO __PUTB1RON
	MOV  R26,R@0
	MOV  R27,R@1
	SUBI R26,LOW(-@2)
	SBCI R27,HIGH(-@2)
	ST   X,R30
	.ENDM

	.MACRO __PUTW1RON
	MOV  R26,R@0
	MOV  R27,R@1
	SUBI R26,LOW(-@2)
	SBCI R27,HIGH(-@2)
	ST   X+,R30
	ST   X,R31
	.ENDM

	.MACRO __PUTD1RON
	MOV  R26,R@0
	MOV  R27,R@1
	SUBI R26,LOW(-@2)
	SBCI R27,HIGH(-@2)
	CALL __PUTDP1
	.ENDM

	.MACRO __PUTB1RONS
	MOV  R26,R@0
	MOV  R27,R@1
	ADIW R26,@2
	ST   X,R30
	.ENDM

	.MACRO __PUTW1RONS
	MOV  R26,R@0
	MOV  R27,R@1
	ADIW R26,@2
	ST   X+,R30
	ST   X,R31
	.ENDM

	.MACRO __PUTD1RONS
	MOV  R26,R@0
	MOV  R27,R@1
	ADIW R26,@2
	CALL __PUTDP1
	.ENDM


	.MACRO __GETB1SX
	MOVW R30,R28
	SUBI R30,LOW(-@0)
	SBCI R31,HIGH(-@0)
	LD   R30,Z
	.ENDM

	.MACRO __GETB1HSX
	MOVW R30,R28
	SUBI R30,LOW(-@0)
	SBCI R31,HIGH(-@0)
	LD   R31,Z
	.ENDM

	.MACRO __GETW1SX
	MOVW R30,R28
	SUBI R30,LOW(-@0)
	SBCI R31,HIGH(-@0)
	LD   R0,Z+
	LD   R31,Z
	MOV  R30,R0
	.ENDM

	.MACRO __GETD1SX
	MOVW R30,R28
	SUBI R30,LOW(-@0)
	SBCI R31,HIGH(-@0)
	LD   R0,Z+
	LD   R1,Z+
	LD   R22,Z+
	LD   R23,Z
	MOVW R30,R0
	.ENDM

	.MACRO __GETB2SX
	MOVW R26,R28
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	LD   R26,X
	.ENDM

	.MACRO __GETW2SX
	MOVW R26,R28
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	LD   R0,X+
	LD   R27,X
	MOV  R26,R0
	.ENDM

	.MACRO __GETD2SX
	MOVW R26,R28
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	LD   R0,X+
	LD   R1,X+
	LD   R24,X+
	LD   R25,X
	MOVW R26,R0
	.ENDM

	.MACRO __GETBRSX
	MOVW R30,R28
	SUBI R30,LOW(-@1)
	SBCI R31,HIGH(-@1)
	LD   R@0,Z
	.ENDM

	.MACRO __GETWRSX
	MOVW R30,R28
	SUBI R30,LOW(-@2)
	SBCI R31,HIGH(-@2)
	LD   R@0,Z+
	LD   R@1,Z
	.ENDM

	.MACRO __GETBRSX2
	MOVW R26,R28
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	LD   R@0,X
	.ENDM

	.MACRO __GETWRSX2
	MOVW R26,R28
	SUBI R26,LOW(-@2)
	SBCI R27,HIGH(-@2)
	LD   R@0,X+
	LD   R@1,X
	.ENDM

	.MACRO __LSLW8SX
	MOVW R30,R28
	SUBI R30,LOW(-@0)
	SBCI R31,HIGH(-@0)
	LD   R31,Z
	CLR  R30
	.ENDM

	.MACRO __PUTB1SX
	MOVW R26,R28
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	ST   X,R30
	.ENDM

	.MACRO __PUTW1SX
	MOVW R26,R28
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	ST   X+,R30
	ST   X,R31
	.ENDM

	.MACRO __PUTD1SX
	MOVW R26,R28
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	ST   X+,R30
	ST   X+,R31
	ST   X+,R22
	ST   X,R23
	.ENDM

	.MACRO __CLRW1SX
	MOVW R26,R28
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	ST   X+,R30
	ST   X,R30
	.ENDM

	.MACRO __CLRD1SX
	MOVW R26,R28
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	ST   X+,R30
	ST   X+,R30
	ST   X+,R30
	ST   X,R30
	.ENDM

	.MACRO __PUTB2SX
	MOVW R30,R28
	SUBI R30,LOW(-@0)
	SBCI R31,HIGH(-@0)
	ST   Z,R26
	.ENDM

	.MACRO __PUTW2SX
	MOVW R30,R28
	SUBI R30,LOW(-@0)
	SBCI R31,HIGH(-@0)
	ST   Z+,R26
	ST   Z,R27
	.ENDM

	.MACRO __PUTD2SX
	MOVW R30,R28
	SUBI R30,LOW(-@0)
	SBCI R31,HIGH(-@0)
	ST   Z+,R26
	ST   Z+,R27
	ST   Z+,R24
	ST   Z,R25
	.ENDM

	.MACRO __PUTBSRX
	MOVW R30,R28
	SUBI R30,LOW(-@1)
	SBCI R31,HIGH(-@1)
	ST   Z,R@0
	.ENDM

	.MACRO __PUTWSRX
	MOVW R30,R28
	SUBI R30,LOW(-@2)
	SBCI R31,HIGH(-@2)
	ST   Z+,R@0
	ST   Z,R@1
	.ENDM

	.MACRO __PUTB1SNX
	MOVW R26,R28
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	LD   R0,X+
	LD   R27,X
	MOV  R26,R0
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	ST   X,R30
	.ENDM

	.MACRO __PUTW1SNX
	MOVW R26,R28
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	LD   R0,X+
	LD   R27,X
	MOV  R26,R0
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	ST   X+,R30
	ST   X,R31
	.ENDM

	.MACRO __PUTD1SNX
	MOVW R26,R28
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	LD   R0,X+
	LD   R27,X
	MOV  R26,R0
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	ST   X+,R30
	ST   X+,R31
	ST   X+,R22
	ST   X,R23
	.ENDM

	.MACRO __MULBRR
	MULS R@0,R@1
	MOVW R30,R0
	.ENDM

	.MACRO __MULBRRU
	MUL  R@0,R@1
	MOVW R30,R0
	.ENDM

	.MACRO __MULBRR0
	MULS R@0,R@1
	.ENDM

	.MACRO __MULBRRU0
	MUL  R@0,R@1
	.ENDM

	.MACRO __MULBNWRU
	LDI  R26,@2
	MUL  R26,R@0
	MOVW R30,R0
	MUL  R26,R@1
	ADD  R31,R0
	.ENDM

;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
	.DEF _r=R5
	.DEF _i=R4

	.CSEG
	.ORG 0x00

;START OF CODE MARKER
__START_OF_CODE:

;INTERRUPT VECTORS
	JMP  __RESET
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  _timer1_compa_isr
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00

_k1:
	.DB  0x20,0x22,0x2A,0x2B,0x2C,0x5B,0x3D,0x5D
	.DB  0x7C,0x7F,0x0
_tbl10_G102:
	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
	.DB  0x1,0x0
_tbl16_G102:
	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0

_0x0:
	.DB  0x73,0x75,0x63,0x63,0x65,0x73,0x73,0xA
	.DB  0xD,0x0,0x61,0x20,0x77,0x72,0x69,0x74
	.DB  0x65,0x20,0x65,0x72,0x72,0x6F,0x72,0x20
	.DB  0x6F,0x63,0x63,0x75,0x72,0x65,0x64,0xA
	.DB  0xD,0x0,0x74,0x68,0x65,0x20,0x4D,0x4D
	.DB  0x43,0x2F,0x53,0x44,0x2F,0x53,0x44,0x20
	.DB  0x48,0x43,0x20,0x63,0x61,0x72,0x64,0x20
	.DB  0x69,0x73,0x20,0x77,0x72,0x69,0x74,0x65
	.DB  0x20,0x70,0x72,0x6F,0x74,0x65,0x63,0x74
	.DB  0x65,0x64,0xA,0xD,0x0,0x74,0x68,0x65
	.DB  0x20,0x64,0x69,0x73,0x6B,0x20,0x64,0x72
	.DB  0x69,0x76,0x65,0x20,0x68,0x61,0x73,0x20
	.DB  0x6E,0x6F,0x74,0x20,0x62,0x65,0x65,0x6E
	.DB  0x20,0x69,0x6E,0x69,0x74,0x69,0x61,0x6C
	.DB  0x69,0x7A,0x65,0x64,0xA,0xD,0x0,0x69
	.DB  0x6E,0x76,0x61,0x6C,0x69,0x64,0x20,0x70
	.DB  0x61,0x72,0x61,0x6D,0x65,0x74,0x65,0x72
	.DB  0x73,0x20,0x77,0x65,0x72,0x65,0x20,0x70
	.DB  0x61,0x73,0x73,0x65,0x64,0x20,0x74,0x6F
	.DB  0x20,0x74,0x68,0x65,0x20,0x66,0x75,0x6E
	.DB  0x63,0x74,0x69,0x6F,0x6E,0xA,0xD,0x0
	.DB  0xA,0x44,0x69,0x73,0x6B,0x20,0x69,0x6E
	.DB  0x69,0x74,0x20,0x66,0x61,0x69,0x6C,0x65
	.DB  0x64,0xA,0xD,0x0,0xA,0x43,0x61,0x72
	.DB  0x64,0x20,0x6E,0x6F,0x74,0x20,0x70,0x72
	.DB  0x65,0x73,0x65,0x6E,0x74,0xA,0xD,0x0
	.DB  0xA,0x43,0x61,0x72,0x64,0x20,0x77,0x72
	.DB  0x69,0x74,0x65,0xA,0x70,0x72,0x6F,0x74
	.DB  0x65,0x63,0x74,0x65,0x64,0xA,0xD,0x0
	.DB  0xA,0x49,0x6E,0x69,0x74,0x20,0x4F,0x4B
	.DB  0xA,0xD,0x0,0xA,0x64,0x61,0x74,0x61
	.DB  0x3D,0x25,0x64,0xA,0x0
_0x2000003:
	.DB  0x1

__GLOBAL_INI_TBL:
	.DW  0x01
	.DW  _status_G100
	.DW  _0x2000003*2

_0xFFFFFFFF:
	.DW  0

__RESET:
	CLI
	CLR  R30
	OUT  EECR,R30

;INTERRUPT VECTORS ARE PLACED
;AT THE START OF FLASH
	LDI  R31,1
	OUT  GICR,R31
	OUT  GICR,R30
	OUT  MCUCR,R30

;DISABLE WATCHDOG
	LDI  R31,0x18
	OUT  WDTCR,R31
	OUT  WDTCR,R30

;CLEAR R2-R14
	LDI  R24,(14-2)+1
	LDI  R26,2
	CLR  R27
__CLEAR_REG:
	ST   X+,R30
	DEC  R24
	BRNE __CLEAR_REG

;CLEAR SRAM
	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
	LDI  R26,__SRAM_START
__CLEAR_SRAM:
	ST   X+,R30
	SBIW R24,1
	BRNE __CLEAR_SRAM

;GLOBAL VARIABLES INITIALIZATION
	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
__GLOBAL_INI_NEXT:
	LPM  R24,Z+
	LPM  R25,Z+
	SBIW R24,0
	BREQ __GLOBAL_INI_END
	LPM  R26,Z+
	LPM  R27,Z+
	LPM  R0,Z+
	LPM  R1,Z+
	MOVW R22,R30
	MOVW R30,R0
__GLOBAL_INI_LOOP:
	LPM  R0,Z+
	ST   X+,R0
	SBIW R24,1
	BRNE __GLOBAL_INI_LOOP
	MOVW R30,R22
	RJMP __GLOBAL_INI_NEXT
__GLOBAL_INI_END:

;HARDWARE STACK POINTER INITIALIZATION
	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
	OUT  SPL,R30
	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
	OUT  SPH,R30

;DATA STACK POINTER INITIALIZATION
	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)

	JMP  _main

	.ESEG
	.ORG 0

	.DSEG
	.ORG 0x260

	.CSEG
;#include <mega32.h>
	#ifndef __SLEEP_DEFINED__
	#define __SLEEP_DEFINED__
	.EQU __se_bit=0x80
	.EQU __sm_mask=0x70
	.EQU __sm_powerdown=0x20
	.EQU __sm_powersave=0x30
	.EQU __sm_standby=0x60
	.EQU __sm_ext_standby=0x70
	.EQU __sm_adc_noise_red=0x10
	.SET power_ctrl_reg=mcucr
	#endif
;#include <sdcard.h>
;#include <stdio.h>
;#include <delay.h>
;
;
;interrupt [TIM1_COMPA] void timer1_compa_isr(void)
; 0000 0008 {

	.CSEG
_timer1_compa_isr:
	ST   -Y,R0
	ST   -Y,R1
	ST   -Y,R15
	ST   -Y,R22
	ST   -Y,R23
	ST   -Y,R24
	ST   -Y,R25
	ST   -Y,R26
	ST   -Y,R27
	ST   -Y,R30
	ST   -Y,R31
	IN   R30,SREG
	ST   -Y,R30
; 0000 0009 disk_timerproc();    /* Drive timer procedure of low level disk I/O module */
	CALL _disk_timerproc
; 0000 000A }
	LD   R30,Y+
	OUT  SREG,R30
	LD   R31,Y+
	LD   R30,Y+
	LD   R27,Y+
	LD   R26,Y+
	LD   R25,Y+
	LD   R24,Y+
	LD   R23,Y+
	LD   R22,Y+
	LD   R15,Y+
	LD   R1,Y+
	LD   R0,Y+
	RETI
;void usart_init(){
; 0000 000B void usart_init(){
_usart_init:
; 0000 000C // USART initialization
; 0000 000D // Communication Parameters: 8 Data, 1 Stop, No Parity
; 0000 000E // USART Receiver: Off
; 0000 000F // USART Transmitter: On
; 0000 0010 // USART Mode: Asynchronous
; 0000 0011 // USART Baud Rate: 9600
; 0000 0012 UCSRA=0x00;
	LDI  R30,LOW(0)
	OUT  0xB,R30
; 0000 0013 UCSRB=0x08;
	LDI  R30,LOW(8)
	OUT  0xA,R30
; 0000 0014 UCSRC=0x86;
	LDI  R30,LOW(134)
	OUT  0x20,R30
; 0000 0015 UBRRH=0x00;
	LDI  R30,LOW(0)
	OUT  0x20,R30
; 0000 0016 UBRRL=0x33;
	LDI  R30,LOW(51)
	OUT  0x9,R30
; 0000 0017 }
	RET
;void status(unsigned char st){
; 0000 0018 void status(unsigned char st){
_status:
; 0000 0019 if(st & RES_OK) printf("success\n\r");
	ST   -Y,R26
;	st -> Y+0
	LD   R30,Y
	ANDI R30,LOW(0x0)
	BREQ _0x3
	__POINTW1FN _0x0,0
	RJMP _0x1C
; 0000 001A else
_0x3:
; 0000 001B if(st & RES_ERROR) printf("a write error occured\n\r");
	LD   R30,Y
	ANDI R30,LOW(0x1)
	BREQ _0x5
	__POINTW1FN _0x0,10
	RJMP _0x1C
; 0000 001C else
_0x5:
; 0000 001D if(st & RES_WRPRT) printf("the MMC/SD/SD HC card is write protected\n\r");
	LD   R30,Y
	ANDI R30,LOW(0x2)
	BREQ _0x7
	__POINTW1FN _0x0,34
	RJMP _0x1C
; 0000 001E else
_0x7:
; 0000 001F if(st & RES_NOTRDY) printf("the disk drive has not been initialized\n\r");
	LD   R30,Y
	ANDI R30,LOW(0x3)
	BREQ _0x9
	__POINTW1FN _0x0,77
	RJMP _0x1C
; 0000 0020 else
_0x9:
; 0000 0021 if(st & RES_PARERR) printf("invalid parameters were passed to the function\n\r");
	LD   R30,Y
	ANDI R30,LOW(0x4)
	BREQ _0xB
	__POINTW1FN _0x0,119
_0x1C:
	ST   -Y,R31
	ST   -Y,R30
	LDI  R24,0
	CALL _printf
	ADIW R28,2
; 0000 0022 }
_0xB:
	JMP  _0x20A0002
;
;//Drv mmc;
;unsigned char r;
;unsigned char buffer[512];
;unsigned char i;
;unsigned long int sector_count;
;void main(){
; 0000 0029 void main(){
_main:
; 0000 002A     OCR1A = 7813;        // Timer1: 100Hz interval (OCR1A)
	LDI  R30,LOW(7813)
	LDI  R31,HIGH(7813)
	OUT  0x2A+1,R31
	OUT  0x2A,R30
; 0000 002B     TCCR1A = 0x00;
	LDI  R30,LOW(0)
	OUT  0x2F,R30
; 0000 002C     TCCR1B = 0x0D;
	LDI  R30,LOW(13)
	OUT  0x2E,R30
; 0000 002D     TIMSK=0x10;
	LDI  R30,LOW(16)
	OUT  0x39,R30
; 0000 002E     DDRB=1;
	LDI  R30,LOW(1)
	OUT  0x17,R30
; 0000 002F 
; 0000 0030     #asm("sei")
	sei
; 0000 0031     usart_init();
	RCALL _usart_init
; 0000 0032     r=disk_initialize(0);
	LDI  R26,LOW(0)
	RCALL _disk_initialize
	MOV  R5,R30
; 0000 0033 
; 0000 0034    if (r & STA_NOINIT) printf("\nDisk init failed\n\r");
	SBRS R5,0
	RJMP _0xC
	__POINTW1FN _0x0,168
	RJMP _0x1D
; 0000 0035    else
_0xC:
; 0000 0036    if (r & STA_NODISK) printf("\nCard not present\n\r");
	SBRS R5,1
	RJMP _0xE
	__POINTW1FN _0x0,188
	RJMP _0x1D
; 0000 0037    else
_0xE:
; 0000 0038    if (r & STA_PROTECT) printf("\nCard write\nprotected\n\r");
	SBRS R5,2
	RJMP _0x10
	__POINTW1FN _0x0,208
	RJMP _0x1D
; 0000 0039    /* all status flags are 0, disk initialization OK */
; 0000 003A    else printf("\nInit OK\n\r");
_0x10:
	__POINTW1FN _0x0,232
_0x1D:
	ST   -Y,R31
	ST   -Y,R30
	LDI  R24,0
	CALL _printf
	ADIW R28,2
; 0000 003B    delay_ms(2000);
	LDI  R26,LOW(2000)
	LDI  R27,HIGH(2000)
	CALL _delay_ms
; 0000 003C    //while(1);
; 0000 003D 
; 0000 003E    for(i=0;i<=100;i++){
	CLR  R4
_0x13:
	LDI  R30,LOW(100)
	CP   R30,R4
	BRLO _0x14
; 0000 003F     buffer[i]=i;
	CALL SUBOPT_0x0
	ST   Z,R4
; 0000 0040     }
	INC  R4
	RJMP _0x13
_0x14:
; 0000 0041    status(disk_write(0,buffer,1000,1));
	CALL SUBOPT_0x1
	RCALL _disk_write
	MOV  R26,R30
	RCALL _status
; 0000 0042 
; 0000 0043    for(i=0;i<=100;i++){
	CLR  R4
_0x16:
	LDI  R30,LOW(100)
	CP   R30,R4
	BRLO _0x17
; 0000 0044     buffer[i]=0;
	CALL SUBOPT_0x0
	LDI  R26,LOW(0)
	STD  Z+0,R26
; 0000 0045     }
	INC  R4
	RJMP _0x16
_0x17:
; 0000 0046 
; 0000 0047    status(disk_read(0,buffer,1000,1));
	CALL SUBOPT_0x1
	RCALL _disk_read
	MOV  R26,R30
	RCALL _status
; 0000 0048 
; 0000 0049    printf("\ndata=%d\n",buffer[20]);
	__POINTW1FN _0x0,243
	ST   -Y,R31
	ST   -Y,R30
	__GETB1MN _buffer,20
	CLR  R31
	CLR  R22
	CLR  R23
	CALL __PUTPARD1
	LDI  R24,4
	CALL _printf
	ADIW R28,6
; 0000 004A 
; 0000 004B 
; 0000 004C    while(1);
_0x18:
	RJMP _0x18
; 0000 004D 
; 0000 004E }
_0x1B:
	RJMP _0x1B
	#ifndef __SLEEP_DEFINED__
	#define __SLEEP_DEFINED__
	.EQU __se_bit=0x80
	.EQU __sm_mask=0x70
	.EQU __sm_powerdown=0x20
	.EQU __sm_powersave=0x30
	.EQU __sm_standby=0x60
	.EQU __sm_ext_standby=0x70
	.EQU __sm_adc_noise_red=0x10
	.SET power_ctrl_reg=mcucr
	#endif

	.DSEG

	.CSEG
_wait_ready_G100:
	ST   -Y,R17
	LDI  R30,LOW(50)
	STS  _timer2_G100,R30
	LDI  R30,LOW(255)
	OUT  0xF,R30
_0x2000004:
	SBIS 0xE,7
	RJMP _0x2000004
_0x2000008:
	LDI  R30,LOW(255)
	OUT  0xF,R30
_0x200000A:
	SBIS 0xE,7
	RJMP _0x200000A
	IN   R17,15
	CPI  R17,255
	BREQ _0x200000D
	LDS  R30,_timer2_G100
	CPI  R30,0
	BRNE _0x200000E
_0x200000D:
	RJMP _0x2000009
_0x200000E:
	RJMP _0x2000008
_0x2000009:
	MOV  R30,R17
	LD   R17,Y+
	RET
_release_spi_G100:
	SBI  0x18,4
	LDI  R30,LOW(255)
	OUT  0xF,R30
_0x200000F:
	SBIS 0xE,7
	RJMP _0x200000F
	RET
_rx_datablock_G100:
	ST   -Y,R27
	ST   -Y,R26
	CALL __SAVELOCR4
	LDI  R30,LOW(10)
	STS  _timer1_G100,R30
_0x2000013:
	LDI  R30,LOW(255)
	OUT  0xF,R30
_0x2000015:
	SBIS 0xE,7
	RJMP _0x2000015
	IN   R17,15
	CPI  R17,255
	BRNE _0x2000018
	LDS  R30,_timer1_G100
	CPI  R30,0
	BRNE _0x2000019
_0x2000018:
	RJMP _0x2000014
_0x2000019:
	RJMP _0x2000013
_0x2000014:
	CPI  R17,254
	BREQ _0x200001A
	LDI  R30,LOW(0)
	CALL __LOADLOCR4
	RJMP _0x20A0003
_0x200001A:
	__GETWRS 18,19,6
_0x200001C:
	LDI  R30,LOW(255)
	OUT  0xF,R30
_0x200001E:
	SBIS 0xE,7
	RJMP _0x200001E
	PUSH R19
	PUSH R18
	__ADDWRN 18,19,1
	IN   R30,0xF
	POP  R26
	POP  R27
	ST   X,R30
	LDI  R30,LOW(255)
	OUT  0xF,R30
_0x2000021:
	SBIS 0xE,7
	RJMP _0x2000021
	PUSH R19
	PUSH R18
	__ADDWRN 18,19,1
	IN   R30,0xF
	POP  R26
	POP  R27
	ST   X,R30
	LDI  R30,LOW(255)
	OUT  0xF,R30
_0x2000024:
	SBIS 0xE,7
	RJMP _0x2000024
	PUSH R19
	PUSH R18
	__ADDWRN 18,19,1
	IN   R30,0xF
	POP  R26
	POP  R27
	ST   X,R30
	LDI  R30,LOW(255)
	OUT  0xF,R30
_0x2000027:
	SBIS 0xE,7
	RJMP _0x2000027
	PUSH R19
	PUSH R18
	__ADDWRN 18,19,1
	IN   R30,0xF
	POP  R26
	POP  R27
	ST   X,R30
	LDD  R30,Y+4
	LDD  R31,Y+4+1
	SBIW R30,4
	STD  Y+4,R30
	STD  Y+4+1,R31
	BRNE _0x200001C
	LDI  R30,LOW(255)
	OUT  0xF,R30
_0x200002A:
	SBIS 0xE,7
	RJMP _0x200002A
	LDI  R30,LOW(255)
	OUT  0xF,R30
_0x200002D:
	SBIS 0xE,7
	RJMP _0x200002D
	LDI  R30,LOW(1)
	CALL __LOADLOCR4
	RJMP _0x20A0003
_tx_datablock_G100:
	ST   -Y,R26
	CALL __SAVELOCR4
	RCALL _wait_ready_G100
	CPI  R30,LOW(0xFF)
	BREQ _0x2000030
	LDI  R30,LOW(0)
	CALL __LOADLOCR4
	RJMP _0x20A0008
_0x2000030:
	LDD  R30,Y+4
	OUT  0xF,R30
_0x2000031:
	SBIS 0xE,7
	RJMP _0x2000031
	LDD  R26,Y+4
	CPI  R26,LOW(0xFD)
	BREQ _0x2000034
	LDI  R16,LOW(0)
	__GETWRS 18,19,5
_0x2000036:
	MOVW R26,R18
	__ADDWRN 18,19,1
	LD   R30,X
	OUT  0xF,R30
_0x2000038:
	SBIS 0xE,7
	RJMP _0x2000038
	MOVW R26,R18
	__ADDWRN 18,19,1
	LD   R30,X
	OUT  0xF,R30
_0x200003B:
	SBIS 0xE,7
	RJMP _0x200003B
	SUBI R16,LOW(1)
	CPI  R16,0
	BRNE _0x2000036
	LDI  R30,LOW(255)
	OUT  0xF,R30
_0x200003E:
	SBIS 0xE,7
	RJMP _0x200003E
	LDI  R30,LOW(255)
	OUT  0xF,R30
_0x2000041:
	SBIS 0xE,7
	RJMP _0x2000041
	LDI  R30,LOW(255)
	OUT  0xF,R30
_0x2000044:
	SBIS 0xE,7
	RJMP _0x2000044
	IN   R17,15
	MOV  R30,R17
	ANDI R30,LOW(0x1F)
	CPI  R30,LOW(0x5)
	BREQ _0x2000047
	LDI  R30,LOW(0)
	CALL __LOADLOCR4
	RJMP _0x20A0008
_0x2000047:
_0x2000034:
	LDI  R30,LOW(1)
	CALL __LOADLOCR4
	RJMP _0x20A0008
_send_cmd_G100:
	CALL __PUTPARD2
	ST   -Y,R17
	ST   -Y,R16
	LDD  R30,Y+6
	ANDI R30,LOW(0x80)
	BREQ _0x2000048
	LDD  R30,Y+6
	ANDI R30,0x7F
	STD  Y+6,R30
	LDI  R30,LOW(119)
	ST   -Y,R30
	__GETD2N 0x0
	RCALL _send_cmd_G100
	MOV  R16,R30
	CPI  R16,2
	BRSH _0x20A0007
_0x2000048:
	SBI  0x18,4
	CBI  0x18,4
	RCALL _wait_ready_G100
	CPI  R30,LOW(0xFF)
	BREQ _0x200004A
	LDI  R30,LOW(255)
	RJMP _0x20A0006
_0x200004A:
	LDD  R30,Y+6
	OUT  0xF,R30
_0x200004B:
	SBIS 0xE,7
	RJMP _0x200004B
	LDD  R30,Y+5
	OUT  0xF,R30
_0x200004E:
	SBIS 0xE,7
	RJMP _0x200004E
	LDD  R30,Y+4
	OUT  0xF,R30
_0x2000051:
	SBIS 0xE,7
	RJMP _0x2000051
	LDD  R30,Y+3
	OUT  0xF,R30
_0x2000054:
	SBIS 0xE,7
	RJMP _0x2000054
	LDD  R30,Y+2
	OUT  0xF,R30
_0x2000057:
	SBIS 0xE,7
	RJMP _0x2000057
	LDI  R17,LOW(1)
	LDD  R26,Y+6
	CPI  R26,LOW(0x40)
	BRNE _0x200005A
	LDI  R17,LOW(149)
	RJMP _0x200005B
_0x200005A:
	LDD  R26,Y+6
	CPI  R26,LOW(0x48)
	BRNE _0x200005C
	LDI  R17,LOW(135)
_0x200005C:
_0x200005B:
	OUT  0xF,R17
_0x200005D:
	SBIS 0xE,7
	RJMP _0x200005D
	LDD  R26,Y+6
	CPI  R26,LOW(0x4C)
	BRNE _0x2000060
	LDI  R30,LOW(255)
	OUT  0xF,R30
_0x2000061:
	SBIS 0xE,7
	RJMP _0x2000061
_0x2000060:
	LDI  R17,LOW(255)
_0x2000065:
	LDI  R30,LOW(255)
	OUT  0xF,R30
_0x2000067:
	SBIS 0xE,7
	RJMP _0x2000067
	IN   R16,15
	SBRS R16,7
	RJMP _0x200006A
	SUBI R17,LOW(1)
	CPI  R17,0
	BRNE _0x200006B
_0x200006A:
	RJMP _0x2000066
_0x200006B:
	RJMP _0x2000065
_0x2000066:
_0x20A0007:
	MOV  R30,R16
_0x20A0006:
	LDD  R17,Y+1
	LDD  R16,Y+0
_0x20A0008:
	ADIW R28,7
	RET
_rx_spi4_G100:
	ST   -Y,R27
	ST   -Y,R26
	ST   -Y,R17
	LDI  R17,4
_0x200006D:
	LDI  R30,LOW(255)
	OUT  0xF,R30
_0x200006F:
	SBIS 0xE,7
	RJMP _0x200006F
	LDD  R26,Y+1
	LDD  R27,Y+1+1
	ADIW R26,1
	STD  Y+1,R26
	STD  Y+1+1,R27
	SBIW R26,1
	IN   R30,0xF
	ST   X,R30
	SUBI R17,LOW(1)
	CPI  R17,0
	BRNE _0x200006D
	LDD  R17,Y+0
	JMP  _0x20A0001
_disk_initialize:
	ST   -Y,R26
	SBIW R28,4
	CALL __SAVELOCR4
	LDD  R30,Y+8
	CPI  R30,0
	BREQ _0x2000072
	LDI  R30,LOW(1)
	RJMP _0x20A0005
_0x2000072:
	CBI  0x11,2
	CBI  0x17,1
	LDI  R30,LOW(10)
	STS  _timer1_G100,R30
_0x2000073:
	LDS  R30,_timer1_G100
	CPI  R30,0
	BRNE _0x2000073
	LDS  R30,_status_G100
	ANDI R30,LOW(0x2)
	BREQ _0x2000076
	RJMP _0x20A0004
_0x2000076:
	SBI  0x17,4
	SBI  0x18,4
	IN   R30,0x18
	ANDI R30,LOW(0x5F)
	OUT  0x18,R30
	SBI  0x18,6
	CBI  0x17,6
	IN   R30,0x17
	ORI  R30,LOW(0xB0)
	OUT  0x17,R30
	LDI  R30,LOW(82)
	OUT  0xD,R30
	LDI  R30,LOW(0)
	OUT  0xE,R30
	LDI  R19,LOW(255)
_0x2000078:
	LDI  R17,LOW(10)
_0x200007B:
	LDI  R30,LOW(255)
	OUT  0xF,R30
_0x200007D:
	SBIS 0xE,7
	RJMP _0x200007D
	SUBI R17,LOW(1)
	CPI  R17,0
	BRNE _0x200007B
	LDI  R30,LOW(64)
	ST   -Y,R30
	__GETD2N 0x0
	RCALL _send_cmd_G100
	MOV  R16,R30
	SUBI R19,LOW(1)
	CPI  R16,1
	BREQ _0x2000080
	CPI  R19,0
	BRNE _0x2000081
_0x2000080:
	RJMP _0x2000079
_0x2000081:
	RJMP _0x2000078
_0x2000079:
	LDI  R19,LOW(0)
	CPI  R16,1
	BREQ PC+3
	JMP _0x2000082
	LDI  R30,LOW(100)
	STS  _timer1_G100,R30
	LDI  R30,LOW(72)
	ST   -Y,R30
	__GETD2N 0x1AA
	RCALL _send_cmd_G100
	CPI  R30,LOW(0x1)
	BRNE _0x2000083
	MOVW R26,R28
	ADIW R26,4
	RCALL _rx_spi4_G100
	LDD  R26,Y+6
	CPI  R26,LOW(0x1)
	BRNE _0x2000085
	LDD  R26,Y+7
	CPI  R26,LOW(0xAA)
	BREQ _0x2000086
_0x2000085:
	RJMP _0x2000084
_0x2000086:
_0x2000087:
	LDS  R30,_timer1_G100
	CPI  R30,0
	BREQ _0x200008A
	LDI  R30,LOW(233)
	ST   -Y,R30
	__GETD2N 0x40000000
	RCALL _send_cmd_G100
	CPI  R30,0
	BRNE _0x200008B
_0x200008A:
	RJMP _0x2000089
_0x200008B:
	RJMP _0x2000087
_0x2000089:
	LDS  R30,_timer1_G100
	CPI  R30,0
	BREQ _0x200008D
	LDI  R30,LOW(122)
	ST   -Y,R30
	__GETD2N 0x0
	RCALL _send_cmd_G100
	CPI  R30,0
	BREQ _0x200008E
_0x200008D:
	RJMP _0x200008C
_0x200008E:
	MOVW R26,R28
	ADIW R26,4
	RCALL _rx_spi4_G100
	LDD  R30,Y+4
	ANDI R30,LOW(0x40)
	BREQ _0x200008F
	LDI  R30,LOW(12)
	RJMP _0x2000090
_0x200008F:
	LDI  R30,LOW(4)
_0x2000090:
	MOV  R19,R30
_0x200008C:
_0x2000084:
	RJMP _0x2000092
_0x2000083:
	LDI  R30,LOW(233)
	ST   -Y,R30
	__GETD2N 0x0
	RCALL _send_cmd_G100
	CPI  R30,LOW(0x2)
	BRSH _0x2000093
	LDI  R19,LOW(2)
	LDI  R16,LOW(233)
	RJMP _0x2000094
_0x2000093:
	LDI  R19,LOW(1)
	LDI  R16,LOW(65)
_0x2000094:
_0x2000095:
	LDS  R30,_timer1_G100
	CPI  R30,0
	BREQ _0x2000098
	ST   -Y,R16
	__GETD2N 0x0
	RCALL _send_cmd_G100
	CPI  R30,0
	BRNE _0x2000099
_0x2000098:
	RJMP _0x2000097
_0x2000099:
	RJMP _0x2000095
_0x2000097:
	LDS  R30,_timer1_G100
	CPI  R30,0
	BREQ _0x200009B
	LDI  R30,LOW(80)
	ST   -Y,R30
	__GETD2N 0x200
	RCALL _send_cmd_G100
	CPI  R30,0
	BREQ _0x200009A
_0x200009B:
	LDI  R19,LOW(0)
_0x200009A:
_0x2000092:
_0x2000082:
	STS  _card_type_G100,R19
	RCALL _release_spi_G100
	CPI  R19,0
	BREQ _0x200009D
	LDS  R30,_status_G100
	ANDI R30,0xFE
	STS  _status_G100,R30
	LDI  R30,LOW(80)
	OUT  0xD,R30
	LDI  R30,LOW(1)
	OUT  0xE,R30
	RJMP _0x200009E
_0x200009D:
	CBI  0x18,4
	RCALL _wait_ready_G100
	RCALL _release_spi_G100
	LDI  R30,LOW(0)
	OUT  0xD,R30
	IN   R30,0x17
	ANDI R30,LOW(0xF)
	OUT  0x17,R30
	IN   R30,0x18
	ANDI R30,LOW(0xF)
	OUT  0x18,R30
	CBI  0x17,4
	LDS  R30,_status_G100
	ORI  R30,1
	STS  _status_G100,R30
_0x200009E:
_0x20A0004:
	LDS  R30,_status_G100
_0x20A0005:
	CALL __LOADLOCR4
	ADIW R28,9
	RET
_disk_read:
	ST   -Y,R26
	LDD  R30,Y+7
	CPI  R30,0
	BRNE _0x20000A1
	LD   R30,Y
	CPI  R30,0
	BRNE _0x20000A0
_0x20000A1:
	LDI  R30,LOW(4)
	LDI  R31,HIGH(4)
	RJMP _0x20A0003
_0x20000A0:
	LDS  R30,_status_G100
	ANDI R30,LOW(0x1)
	BREQ _0x20000A3
	LDI  R30,LOW(3)
	LDI  R31,HIGH(3)
	RJMP _0x20A0003
_0x20000A3:
	LDS  R30,_card_type_G100
	ANDI R30,LOW(0x8)
	BRNE _0x20000A4
	__GETD1S 1
	__GETD2N 0x200
	CALL __MULD12U
	__PUTD1S 1
_0x20000A4:
	LD   R26,Y
	CPI  R26,LOW(0x1)
	BRNE _0x20000A5
	LDI  R30,LOW(81)
	ST   -Y,R30
	__GETD2S 2
	RCALL _send_cmd_G100
	CPI  R30,0
	BRNE _0x20000A7
	LDD  R30,Y+5
	LDD  R31,Y+5+1
	ST   -Y,R31
	ST   -Y,R30
	LDI  R26,LOW(512)
	LDI  R27,HIGH(512)
	RCALL _rx_datablock_G100
	CPI  R30,0
	BRNE _0x20000A8
_0x20000A7:
	RJMP _0x20000A6
_0x20000A8:
	LDI  R30,LOW(0)
	ST   Y,R30
_0x20000A6:
	RJMP _0x20000A9
_0x20000A5:
	LDI  R30,LOW(82)
	ST   -Y,R30
	__GETD2S 2
	RCALL _send_cmd_G100
	CPI  R30,0
	BRNE _0x20000AA
_0x20000AC:
	LDD  R30,Y+5
	LDD  R31,Y+5+1
	ST   -Y,R31
	ST   -Y,R30
	LDI  R26,LOW(512)
	LDI  R27,HIGH(512)
	RCALL _rx_datablock_G100
	CPI  R30,0
	BREQ _0x20000AD
	LDD  R30,Y+5
	LDD  R31,Y+5+1
	SUBI R30,LOW(-512)
	SBCI R31,HIGH(-512)
	STD  Y+5,R30
	STD  Y+5+1,R31
	LD   R30,Y
	SUBI R30,LOW(1)
	ST   Y,R30
	BRNE _0x20000AC
_0x20000AD:
	LDI  R30,LOW(76)
	ST   -Y,R30
	__GETD2N 0x0
	RCALL _send_cmd_G100
_0x20000AA:
_0x20000A9:
	RCALL _release_spi_G100
	LD   R30,Y
	CPI  R30,0
	BREQ _0x20000AF
	LDI  R30,LOW(1)
	LDI  R31,HIGH(1)
	RJMP _0x20000B0
_0x20000AF:
	LDI  R30,LOW(0)
	LDI  R31,HIGH(0)
_0x20000B0:
	RJMP _0x20A0003
_disk_write:
	ST   -Y,R26
	LDD  R30,Y+7
	CPI  R30,0
	BRNE _0x20000B3
	LD   R30,Y
	CPI  R30,0
	BRNE _0x20000B2
_0x20000B3:
	LDI  R30,LOW(4)
	LDI  R31,HIGH(4)
	RJMP _0x20A0003
_0x20000B2:
	LDS  R30,_status_G100
	ANDI R30,LOW(0x1)
	BREQ _0x20000B5
	LDI  R30,LOW(3)
	LDI  R31,HIGH(3)
	RJMP _0x20A0003
_0x20000B5:
	LDS  R30,_status_G100
	ANDI R30,LOW(0x4)
	BREQ _0x20000B6
	LDI  R30,LOW(2)
	LDI  R31,HIGH(2)
	RJMP _0x20A0003
_0x20000B6:
	LDS  R30,_card_type_G100
	ANDI R30,LOW(0x8)
	BRNE _0x20000B7
	__GETD1S 1
	__GETD2N 0x200
	CALL __MULD12U
	__PUTD1S 1
_0x20000B7:
	LD   R26,Y
	CPI  R26,LOW(0x1)
	BRNE _0x20000B8
	LDI  R30,LOW(88)
	ST   -Y,R30
	__GETD2S 2
	RCALL _send_cmd_G100
	CPI  R30,0
	BRNE _0x20000BA
	LDD  R30,Y+5
	LDD  R31,Y+5+1
	ST   -Y,R31
	ST   -Y,R30
	LDI  R26,LOW(254)
	RCALL _tx_datablock_G100
	CPI  R30,0
	BRNE _0x20000BB
_0x20000BA:
	RJMP _0x20000B9
_0x20000BB:
	LDI  R30,LOW(0)
	ST   Y,R30
_0x20000B9:
	RJMP _0x20000BC
_0x20000B8:
	LDS  R30,_card_type_G100
	ANDI R30,LOW(0x6)
	BREQ _0x20000BD
	LDI  R30,LOW(215)
	ST   -Y,R30
	LDD  R26,Y+1
	CLR  R27
	CLR  R24
	CLR  R25
	RCALL _send_cmd_G100
_0x20000BD:
	LDI  R30,LOW(89)
	ST   -Y,R30
	__GETD2S 2
	RCALL _send_cmd_G100
	CPI  R30,0
	BRNE _0x20000BE
_0x20000C0:
	LDD  R30,Y+5
	LDD  R31,Y+5+1
	ST   -Y,R31
	ST   -Y,R30
	LDI  R26,LOW(252)
	RCALL _tx_datablock_G100
	CPI  R30,0
	BREQ _0x20000C1
	LDD  R30,Y+5
	LDD  R31,Y+5+1
	SUBI R30,LOW(-512)
	SBCI R31,HIGH(-512)
	STD  Y+5,R30
	STD  Y+5+1,R31
	LD   R30,Y
	SUBI R30,LOW(1)
	ST   Y,R30
	BRNE _0x20000C0
_0x20000C1:
	LDI  R30,LOW(0)
	LDI  R31,HIGH(0)
	ST   -Y,R31
	ST   -Y,R30
	LDI  R26,LOW(253)
	RCALL _tx_datablock_G100
	CPI  R30,0
	BRNE _0x20000C3
	LDI  R30,LOW(1)
	ST   Y,R30
_0x20000C3:
_0x20000BE:
_0x20000BC:
	RCALL _release_spi_G100
	LD   R30,Y
	CPI  R30,0
	BREQ _0x20000C4
	LDI  R30,LOW(1)
	LDI  R31,HIGH(1)
	RJMP _0x20000C5
_0x20000C4:
	LDI  R30,LOW(0)
	LDI  R31,HIGH(0)
_0x20000C5:
_0x20A0003:
	ADIW R28,8
	RET
_disk_timerproc:
	ST   -Y,R17
	ST   -Y,R16
	LDS  R17,_timer1_G100
	CPI  R17,0
	BREQ _0x20000FA
	SUBI R17,LOW(1)
	STS  _timer1_G100,R17
_0x20000FA:
	LDS  R17,_timer2_G100
	CPI  R17,0
	BREQ _0x20000FB
	SUBI R17,LOW(1)
	STS  _timer2_G100,R17
_0x20000FB:
	LDS  R17,_pv_S100000B000
	IN   R30,0x16
	ANDI R30,LOW(0x2)
	MOV  R26,R30
	IN   R30,0x10
	ANDI R30,LOW(0x4)
	OR   R30,R26
	STS  _pv_S100000B000,R30
	CP   R30,R17
	BRNE _0x20000FC
	LDS  R16,_status_G100
	ANDI R30,LOW(0x2)
	BREQ _0x20000FD
	ORI  R16,LOW(4)
	RJMP _0x20000FE
_0x20000FD:
	ANDI R16,LOW(251)
_0x20000FE:
	LDS  R30,_pv_S100000B000
	ANDI R30,LOW(0x4)
	BREQ _0x20000FF
	ORI  R16,LOW(3)
	RJMP _0x2000100
_0x20000FF:
	ANDI R16,LOW(253)
_0x2000100:
	STS  _status_G100,R16
_0x20000FC:
	LD   R16,Y+
	LD   R17,Y+
	RET

	.CSEG
	#ifndef __SLEEP_DEFINED__
	#define __SLEEP_DEFINED__
	.EQU __se_bit=0x80
	.EQU __sm_mask=0x70
	.EQU __sm_powerdown=0x20
	.EQU __sm_powersave=0x30
	.EQU __sm_standby=0x60
	.EQU __sm_ext_standby=0x70
	.EQU __sm_adc_noise_red=0x10
	.SET power_ctrl_reg=mcucr
	#endif

	.CSEG
_putchar:
	ST   -Y,R26
putchar0:
     sbis usr,udre
     rjmp putchar0
     ld   r30,y
     out  udr,r30
_0x20A0002:
	ADIW R28,1
	RET
_put_usart_G102:
	ST   -Y,R27
	ST   -Y,R26
	LDD  R26,Y+2
	RCALL _putchar
	LD   R26,Y
	LDD  R27,Y+1
	LD   R30,X+
	LD   R31,X+
	ADIW R30,1
	ST   -X,R31
	ST   -X,R30
_0x20A0001:
	ADIW R28,3
	RET
__print_G102:
	ST   -Y,R27
	ST   -Y,R26
	SBIW R28,6
	CALL __SAVELOCR6
	LDI  R17,0
	LDD  R26,Y+12
	LDD  R27,Y+12+1
	LDI  R30,LOW(0)
	LDI  R31,HIGH(0)
	ST   X+,R30
	ST   X,R31
_0x2040031:
	LDD  R30,Y+18
	LDD  R31,Y+18+1
	ADIW R30,1
	STD  Y+18,R30
	STD  Y+18+1,R31
	SBIW R30,1
	LPM  R30,Z
	MOV  R18,R30
	CPI  R30,0
	BRNE PC+3
	JMP _0x2040033
	MOV  R30,R17
	CPI  R30,0
	BRNE _0x2040037
	CPI  R18,37
	BRNE _0x2040038
	LDI  R17,LOW(1)
	RJMP _0x2040039
_0x2040038:
	CALL SUBOPT_0x2
_0x2040039:
	RJMP _0x2040036
_0x2040037:
	CPI  R30,LOW(0x1)
	BRNE _0x204003A
	CPI  R18,37
	BRNE _0x204003B
	CALL SUBOPT_0x2
	RJMP _0x20400EC
_0x204003B:
	LDI  R17,LOW(2)
	LDI  R20,LOW(0)
	LDI  R16,LOW(0)
	CPI  R18,45
	BRNE _0x204003C
	LDI  R16,LOW(1)
	RJMP _0x2040036
_0x204003C:
	CPI  R18,43
	BRNE _0x204003D
	LDI  R20,LOW(43)
	RJMP _0x2040036
_0x204003D:
	CPI  R18,32
	BRNE _0x204003E
	LDI  R20,LOW(32)
	RJMP _0x2040036
_0x204003E:
	RJMP _0x204003F
_0x204003A:
	CPI  R30,LOW(0x2)
	BRNE _0x2040040
_0x204003F:
	LDI  R21,LOW(0)
	LDI  R17,LOW(3)
	CPI  R18,48
	BRNE _0x2040041
	ORI  R16,LOW(128)
	RJMP _0x2040036
_0x2040041:
	RJMP _0x2040042
_0x2040040:
	CPI  R30,LOW(0x3)
	BREQ PC+3
	JMP _0x2040036
_0x2040042:
	CPI  R18,48
	BRLO _0x2040045
	CPI  R18,58
	BRLO _0x2040046
_0x2040045:
	RJMP _0x2040044
_0x2040046:
	LDI  R26,LOW(10)
	MUL  R21,R26
	MOV  R21,R0
	MOV  R30,R18
	SUBI R30,LOW(48)
	ADD  R21,R30
	RJMP _0x2040036
_0x2040044:
	MOV  R30,R18
	CPI  R30,LOW(0x63)
	BRNE _0x204004A
	CALL SUBOPT_0x3
	LDD  R30,Y+16
	LDD  R31,Y+16+1
	LDD  R26,Z+4
	ST   -Y,R26
	CALL SUBOPT_0x4
	RJMP _0x204004B
_0x204004A:
	CPI  R30,LOW(0x73)
	BRNE _0x204004D
	CALL SUBOPT_0x3
	CALL SUBOPT_0x5
	CALL _strlen
	MOV  R17,R30
	RJMP _0x204004E
_0x204004D:
	CPI  R30,LOW(0x70)
	BRNE _0x2040050
	CALL SUBOPT_0x3
	CALL SUBOPT_0x5
	CALL _strlenf
	MOV  R17,R30
	ORI  R16,LOW(8)
_0x204004E:
	ORI  R16,LOW(2)
	ANDI R16,LOW(127)
	LDI  R19,LOW(0)
	RJMP _0x2040051
_0x2040050:
	CPI  R30,LOW(0x64)
	BREQ _0x2040054
	CPI  R30,LOW(0x69)
	BRNE _0x2040055
_0x2040054:
	ORI  R16,LOW(4)
	RJMP _0x2040056
_0x2040055:
	CPI  R30,LOW(0x75)
	BRNE _0x2040057
_0x2040056:
	LDI  R30,LOW(_tbl10_G102*2)
	LDI  R31,HIGH(_tbl10_G102*2)
	STD  Y+6,R30
	STD  Y+6+1,R31
	LDI  R17,LOW(5)
	RJMP _0x2040058
_0x2040057:
	CPI  R30,LOW(0x58)
	BRNE _0x204005A
	ORI  R16,LOW(8)
	RJMP _0x204005B
_0x204005A:
	CPI  R30,LOW(0x78)
	BREQ PC+3
	JMP _0x204008C
_0x204005B:
	LDI  R30,LOW(_tbl16_G102*2)
	LDI  R31,HIGH(_tbl16_G102*2)
	STD  Y+6,R30
	STD  Y+6+1,R31
	LDI  R17,LOW(4)
_0x2040058:
	SBRS R16,2
	RJMP _0x204005D
	CALL SUBOPT_0x3
	CALL SUBOPT_0x6
	LDD  R26,Y+11
	TST  R26
	BRPL _0x204005E
	LDD  R30,Y+10
	LDD  R31,Y+10+1
	CALL __ANEGW1
	STD  Y+10,R30
	STD  Y+10+1,R31
	LDI  R20,LOW(45)
_0x204005E:
	CPI  R20,0
	BREQ _0x204005F
	SUBI R17,-LOW(1)
	RJMP _0x2040060
_0x204005F:
	ANDI R16,LOW(251)
_0x2040060:
	RJMP _0x2040061
_0x204005D:
	CALL SUBOPT_0x3
	CALL SUBOPT_0x6
_0x2040061:
_0x2040051:
	SBRC R16,0
	RJMP _0x2040062
_0x2040063:
	CP   R17,R21
	BRSH _0x2040065
	SBRS R16,7
	RJMP _0x2040066
	SBRS R16,2
	RJMP _0x2040067
	ANDI R16,LOW(251)
	MOV  R18,R20
	SUBI R17,LOW(1)
	RJMP _0x2040068
_0x2040067:
	LDI  R18,LOW(48)
_0x2040068:
	RJMP _0x2040069
_0x2040066:
	LDI  R18,LOW(32)
_0x2040069:
	CALL SUBOPT_0x2
	SUBI R21,LOW(1)
	RJMP _0x2040063
_0x2040065:
_0x2040062:
	MOV  R19,R17
	SBRS R16,1
	RJMP _0x204006A
_0x204006B:
	CPI  R19,0
	BREQ _0x204006D
	SBRS R16,3
	RJMP _0x204006E
	LDD  R30,Y+6
	LDD  R31,Y+6+1
	LPM  R18,Z+
	STD  Y+6,R30
	STD  Y+6+1,R31
	RJMP _0x204006F
_0x204006E:
	LDD  R26,Y+6
	LDD  R27,Y+6+1
	LD   R18,X+
	STD  Y+6,R26
	STD  Y+6+1,R27
_0x204006F:
	CALL SUBOPT_0x2
	CPI  R21,0
	BREQ _0x2040070
	SUBI R21,LOW(1)
_0x2040070:
	SUBI R19,LOW(1)
	RJMP _0x204006B
_0x204006D:
	RJMP _0x2040071
_0x204006A:
_0x2040073:
	LDI  R18,LOW(48)
	LDD  R30,Y+6
	LDD  R31,Y+6+1
	CALL __GETW1PF
	STD  Y+8,R30
	STD  Y+8+1,R31
	LDD  R30,Y+6
	LDD  R31,Y+6+1
	ADIW R30,2
	STD  Y+6,R30
	STD  Y+6+1,R31
_0x2040075:
	LDD  R30,Y+8
	LDD  R31,Y+8+1
	LDD  R26,Y+10
	LDD  R27,Y+10+1
	CP   R26,R30
	CPC  R27,R31
	BRLO _0x2040077
	SUBI R18,-LOW(1)
	LDD  R26,Y+8
	LDD  R27,Y+8+1
	LDD  R30,Y+10
	LDD  R31,Y+10+1
	SUB  R30,R26
	SBC  R31,R27
	STD  Y+10,R30
	STD  Y+10+1,R31
	RJMP _0x2040075
_0x2040077:
	CPI  R18,58
	BRLO _0x2040078
	SBRS R16,3
	RJMP _0x2040079
	SUBI R18,-LOW(7)
	RJMP _0x204007A
_0x2040079:
	SUBI R18,-LOW(39)
_0x204007A:
_0x2040078:
	SBRC R16,4
	RJMP _0x204007C
	CPI  R18,49
	BRSH _0x204007E
	LDD  R26,Y+8
	LDD  R27,Y+8+1
	SBIW R26,1
	BRNE _0x204007D
_0x204007E:
	RJMP _0x20400ED
_0x204007D:
	CP   R21,R19
	BRLO _0x2040082
	SBRS R16,0
	RJMP _0x2040083
_0x2040082:
	RJMP _0x2040081
_0x2040083:
	LDI  R18,LOW(32)
	SBRS R16,7
	RJMP _0x2040084
	LDI  R18,LOW(48)
_0x20400ED:
	ORI  R16,LOW(16)
	SBRS R16,2
	RJMP _0x2040085
	ANDI R16,LOW(251)
	ST   -Y,R20
	CALL SUBOPT_0x4
	CPI  R21,0
	BREQ _0x2040086
	SUBI R21,LOW(1)
_0x2040086:
_0x2040085:
_0x2040084:
_0x204007C:
	CALL SUBOPT_0x2
	CPI  R21,0
	BREQ _0x2040087
	SUBI R21,LOW(1)
_0x2040087:
_0x2040081:
	SUBI R19,LOW(1)
	LDD  R26,Y+8
	LDD  R27,Y+8+1
	SBIW R26,2
	BRLO _0x2040074
	RJMP _0x2040073
_0x2040074:
_0x2040071:
	SBRS R16,0
	RJMP _0x2040088
_0x2040089:
	CPI  R21,0
	BREQ _0x204008B
	SUBI R21,LOW(1)
	LDI  R30,LOW(32)
	ST   -Y,R30
	CALL SUBOPT_0x4
	RJMP _0x2040089
_0x204008B:
_0x2040088:
_0x204008C:
_0x204004B:
_0x20400EC:
	LDI  R17,LOW(0)
_0x2040036:
	RJMP _0x2040031
_0x2040033:
	LDD  R26,Y+12
	LDD  R27,Y+12+1
	CALL __GETW1P
	CALL __LOADLOCR6
	ADIW R28,20
	RET
_printf:
	PUSH R15
	MOV  R15,R24
	SBIW R28,6
	ST   -Y,R17
	ST   -Y,R16
	MOVW R26,R28
	ADIW R26,4
	CALL __ADDW2R15
	MOVW R16,R26
	LDI  R30,LOW(0)
	STD  Y+4,R30
	STD  Y+4+1,R30
	STD  Y+6,R30
	STD  Y+6+1,R30
	MOVW R26,R28
	ADIW R26,8
	CALL __ADDW2R15
	CALL __GETW1P
	ST   -Y,R31
	ST   -Y,R30
	ST   -Y,R17
	ST   -Y,R16
	LDI  R30,LOW(_put_usart_G102)
	LDI  R31,HIGH(_put_usart_G102)
	ST   -Y,R31
	ST   -Y,R30
	MOVW R26,R28
	ADIW R26,8
	RCALL __print_G102
	LDD  R17,Y+1
	LDD  R16,Y+0
	ADIW R28,8
	POP  R15
	RET

	.CSEG
_strlen:
	ST   -Y,R27
	ST   -Y,R26
    ld   r26,y+
    ld   r27,y+
    clr  r30
    clr  r31
strlen0:
    ld   r22,x+
    tst  r22
    breq strlen1
    adiw r30,1
    rjmp strlen0
strlen1:
    ret
_strlenf:
	ST   -Y,R27
	ST   -Y,R26
    clr  r26
    clr  r27
    ld   r30,y+
    ld   r31,y+
strlenf0:
	lpm  r0,z+
    tst  r0
    breq strlenf1
    adiw r26,1
    rjmp strlenf0
strlenf1:
    movw r30,r26
    ret

	.CSEG

	.DSEG
_prtc_get_time:
	.BYTE 0x2
_prtc_get_date:
	.BYTE 0x2
_buffer:
	.BYTE 0x200
_status_G100:
	.BYTE 0x1
_timer1_G100:
	.BYTE 0x1
_timer2_G100:
	.BYTE 0x1
_card_type_G100:
	.BYTE 0x1
_pv_S100000B000:
	.BYTE 0x1
_FatFs_G101:
	.BYTE 0x2
_Fsid_G101:
	.BYTE 0x2
_Drive_G101:
	.BYTE 0x1

	.CSEG
;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0x0:
	MOV  R30,R4
	LDI  R31,0
	SUBI R30,LOW(-_buffer)
	SBCI R31,HIGH(-_buffer)
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
SUBOPT_0x1:
	LDI  R30,LOW(0)
	ST   -Y,R30
	LDI  R30,LOW(_buffer)
	LDI  R31,HIGH(_buffer)
	ST   -Y,R31
	ST   -Y,R30
	__GETD1N 0x3E8
	CALL __PUTPARD1
	LDI  R26,LOW(1)
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
SUBOPT_0x2:
	ST   -Y,R18
	LDD  R26,Y+13
	LDD  R27,Y+13+1
	LDD  R30,Y+15
	LDD  R31,Y+15+1
	ICALL
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
SUBOPT_0x3:
	LDD  R30,Y+16
	LDD  R31,Y+16+1
	SBIW R30,4
	STD  Y+16,R30
	STD  Y+16+1,R31
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
SUBOPT_0x4:
	LDD  R26,Y+13
	LDD  R27,Y+13+1
	LDD  R30,Y+15
	LDD  R31,Y+15+1
	ICALL
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
SUBOPT_0x5:
	LDD  R26,Y+16
	LDD  R27,Y+16+1
	ADIW R26,4
	CALL __GETW1P
	STD  Y+6,R30
	STD  Y+6+1,R31
	LDD  R26,Y+6
	LDD  R27,Y+6+1
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
SUBOPT_0x6:
	LDD  R26,Y+16
	LDD  R27,Y+16+1
	ADIW R26,4
	CALL __GETW1P
	STD  Y+10,R30
	STD  Y+10+1,R31
	RET


	.CSEG
_delay_ms:
	adiw r26,0
	breq __delay_ms1
__delay_ms0:
	__DELAY_USW 0x7D0
	wdr
	sbiw r26,1
	brne __delay_ms0
__delay_ms1:
	ret

__ADDW2R15:
	CLR  R0
	ADD  R26,R15
	ADC  R27,R0
	RET

__ANEGW1:
	NEG  R31
	NEG  R30
	SBCI R31,0
	RET

__MULD12U:
	MUL  R23,R26
	MOV  R23,R0
	MUL  R22,R27
	ADD  R23,R0
	MUL  R31,R24
	ADD  R23,R0
	MUL  R30,R25
	ADD  R23,R0
	MUL  R22,R26
	MOV  R22,R0
	ADD  R23,R1
	MUL  R31,R27
	ADD  R22,R0
	ADC  R23,R1
	MUL  R30,R24
	ADD  R22,R0
	ADC  R23,R1
	CLR  R24
	MUL  R31,R26
	MOV  R31,R0
	ADD  R22,R1
	ADC  R23,R24
	MUL  R30,R27
	ADD  R31,R0
	ADC  R22,R1
	ADC  R23,R24
	MUL  R30,R26
	MOV  R30,R0
	ADD  R31,R1
	ADC  R22,R24
	ADC  R23,R24
	RET

__GETW1P:
	LD   R30,X+
	LD   R31,X
	SBIW R26,1
	RET

__GETW1PF:
	LPM  R0,Z+
	LPM  R31,Z
	MOV  R30,R0
	RET

__PUTPARD1:
	ST   -Y,R23
	ST   -Y,R22
	ST   -Y,R31
	ST   -Y,R30
	RET

__PUTPARD2:
	ST   -Y,R25
	ST   -Y,R24
	ST   -Y,R27
	ST   -Y,R26
	RET

__SAVELOCR6:
	ST   -Y,R21
__SAVELOCR5:
	ST   -Y,R20
__SAVELOCR4:
	ST   -Y,R19
__SAVELOCR3:
	ST   -Y,R18
__SAVELOCR2:
	ST   -Y,R17
	ST   -Y,R16
	RET

__LOADLOCR6:
	LDD  R21,Y+5
__LOADLOCR5:
	LDD  R20,Y+4
__LOADLOCR4:
	LDD  R19,Y+3
__LOADLOCR3:
	LDD  R18,Y+2
__LOADLOCR2:
	LDD  R17,Y+1
	LD   R16,Y
	RET

;END OF CODE MARKER
__END_OF_CODE:
