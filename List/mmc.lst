
AVRASM ver. 2.1.30  D:\Ebooks\Electrical\AVR\naminic\AVR Project Files\MMC\Avr-mmc\List\mmc.asm Fri Aug 22 21:02:48 2014

D:\Ebooks\Electrical\AVR\naminic\AVR Project Files\MMC\Avr-mmc\List\mmc.asm(1072): warning: Register r5 already defined by the .DEF directive
D:\Ebooks\Electrical\AVR\naminic\AVR Project Files\MMC\Avr-mmc\List\mmc.asm(1073): warning: Register r4 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V2.05.3 Standard
                 ;(C) Copyright 1998-2011 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Chip type                : ATmega32
                 ;Program type             : Application
                 ;Clock frequency          : 8.000000 MHz
                 ;Memory model             : Small
                 ;Optimize for             : Size
                 ;(s)printf features       : int, width
                 ;(s)scanf features        : int, width
                 ;External RAM size        : 0
                 ;Data Stack size          : 512 byte(s)
                 ;Heap size                : 0 byte(s)
                 ;Promote 'char' to 'int'  : No
                 ;'char' is unsigned       : Yes
                 ;8 bit enums              : No
                 ;Global 'const' stored in FLASH     : Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions         : On
                 ;Smart register allocation          : On
                 ;Automatic register allocation      : On
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega32
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2143
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x085F
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _r=R5
                 	.DEF _i=R4
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 00bd 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 00ed 	JMP  _timer1_compa_isr
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _k1:
00002a 2220
00002b 2b2a
00002c 5b2c
00002d 5d3d      	.DB  0x20,0x22,0x2A,0x2B,0x2C,0x5B,0x3D,0x5D
00002e 7f7c
D:\Ebooks\Electrical\AVR\naminic\AVR Project Files\MMC\Avr-mmc\List\mmc.asm(1106): warning: .cseg .db misalignment - padding zero byte
00002f 0000      	.DB  0x7C,0x7F,0x0
                 _tbl10_G102:
000030 2710
000031 03e8
000032 0064
000033 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
000034 0001      	.DB  0x1,0x0
                 _tbl16_G102:
000035 1000
000036 0100
000037 0010
000038 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 _0x0:
000039 7573
00003a 6363
00003b 7365
00003c 0a73      	.DB  0x73,0x75,0x63,0x63,0x65,0x73,0x73,0xA
00003d 000d
00003e 2061
00003f 7277
000040 7469      	.DB  0xD,0x0,0x61,0x20,0x77,0x72,0x69,0x74
000041 2065
000042 7265
000043 6f72
000044 2072      	.DB  0x65,0x20,0x65,0x72,0x72,0x6F,0x72,0x20
000045 636f
000046 7563
000047 6572
000048 0a64      	.DB  0x6F,0x63,0x63,0x75,0x72,0x65,0x64,0xA
000049 000d
00004a 6874
00004b 2065
00004c 4d4d      	.DB  0xD,0x0,0x74,0x68,0x65,0x20,0x4D,0x4D
00004d 2f43
00004e 4453
00004f 532f
000050 2044      	.DB  0x43,0x2F,0x53,0x44,0x2F,0x53,0x44,0x20
000051 4348
000052 6320
000053 7261
000054 2064      	.DB  0x48,0x43,0x20,0x63,0x61,0x72,0x64,0x20
000055 7369
000056 7720
000057 6972
000058 6574      	.DB  0x69,0x73,0x20,0x77,0x72,0x69,0x74,0x65
000059 7020
00005a 6f72
00005b 6574
00005c 7463      	.DB  0x20,0x70,0x72,0x6F,0x74,0x65,0x63,0x74
00005d 6465
00005e 0d0a
00005f 7400
000060 6568      	.DB  0x65,0x64,0xA,0xD,0x0,0x74,0x68,0x65
000061 6420
000062 7369
000063 206b
000064 7264      	.DB  0x20,0x64,0x69,0x73,0x6B,0x20,0x64,0x72
000065 7669
000066 2065
000067 6168
000068 2073      	.DB  0x69,0x76,0x65,0x20,0x68,0x61,0x73,0x20
000069 6f6e
00006a 2074
00006b 6562
00006c 6e65      	.DB  0x6E,0x6F,0x74,0x20,0x62,0x65,0x65,0x6E
00006d 6920
00006e 696e
00006f 6974
000070 6c61      	.DB  0x20,0x69,0x6E,0x69,0x74,0x69,0x61,0x6C
000071 7a69
000072 6465
000073 0d0a
000074 6900      	.DB  0x69,0x7A,0x65,0x64,0xA,0xD,0x0,0x69
000075 766e
000076 6c61
000077 6469
000078 7020      	.DB  0x6E,0x76,0x61,0x6C,0x69,0x64,0x20,0x70
000079 7261
00007a 6d61
00007b 7465
00007c 7265      	.DB  0x61,0x72,0x61,0x6D,0x65,0x74,0x65,0x72
00007d 2073
00007e 6577
00007f 6572
000080 7020      	.DB  0x73,0x20,0x77,0x65,0x72,0x65,0x20,0x70
000081 7361
000082 6573
000083 2064
000084 6f74      	.DB  0x61,0x73,0x73,0x65,0x64,0x20,0x74,0x6F
000085 7420
000086 6568
000087 6620
000088 6e75      	.DB  0x20,0x74,0x68,0x65,0x20,0x66,0x75,0x6E
000089 7463
00008a 6f69
00008b 0a6e
00008c 000d      	.DB  0x63,0x74,0x69,0x6F,0x6E,0xA,0xD,0x0
00008d 440a
00008e 7369
00008f 206b
000090 6e69      	.DB  0xA,0x44,0x69,0x73,0x6B,0x20,0x69,0x6E
000091 7469
000092 6620
000093 6961
000094 656c      	.DB  0x69,0x74,0x20,0x66,0x61,0x69,0x6C,0x65
000095 0a64
000096 000d
000097 430a
000098 7261      	.DB  0x64,0xA,0xD,0x0,0xA,0x43,0x61,0x72
000099 2064
00009a 6f6e
00009b 2074
00009c 7270      	.DB  0x64,0x20,0x6E,0x6F,0x74,0x20,0x70,0x72
00009d 7365
00009e 6e65
00009f 0a74
0000a0 000d      	.DB  0x65,0x73,0x65,0x6E,0x74,0xA,0xD,0x0
0000a1 430a
0000a2 7261
0000a3 2064
0000a4 7277      	.DB  0xA,0x43,0x61,0x72,0x64,0x20,0x77,0x72
0000a5 7469
0000a6 0a65
0000a7 7270
0000a8 746f      	.DB  0x69,0x74,0x65,0xA,0x70,0x72,0x6F,0x74
0000a9 6365
0000aa 6574
0000ab 0a64
0000ac 000d      	.DB  0x65,0x63,0x74,0x65,0x64,0xA,0xD,0x0
0000ad 490a
0000ae 696e
0000af 2074
0000b0 4b4f      	.DB  0xA,0x49,0x6E,0x69,0x74,0x20,0x4F,0x4B
0000b1 0d0a
0000b2 0a00
0000b3 6164
0000b4 6174      	.DB  0xA,0xD,0x0,0xA,0x64,0x61,0x74,0x61
0000b5 253d
0000b6 0a64
D:\Ebooks\Electrical\AVR\naminic\AVR Project Files\MMC\Avr-mmc\List\mmc.asm(1145): warning: .cseg .db misalignment - padding zero byte
0000b7 0000      	.DB  0x3D,0x25,0x64,0xA,0x0
                 _0x2000003:
D:\Ebooks\Electrical\AVR\naminic\AVR Project Files\MMC\Avr-mmc\List\mmc.asm(1147): warning: .cseg .db misalignment - padding zero byte
0000b8 0001      	.DB  0x1
                 
                 __GLOBAL_INI_TBL:
0000b9 0001      	.DW  0x01
0000ba 0464      	.DW  _status_G100
0000bb 0170      	.DW  _0x2000003*2
                 
                 _0xFFFFFFFF:
0000bc 0000      	.DW  0
                 
                 __RESET:
0000bd 94f8      	CLI
0000be 27ee      	CLR  R30
0000bf bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
0000c0 e0f1      	LDI  R31,1
0000c1 bffb      	OUT  GICR,R31
0000c2 bfeb      	OUT  GICR,R30
0000c3 bfe5      	OUT  MCUCR,R30
                 
                 ;DISABLE WATCHDOG
0000c4 e1f8      	LDI  R31,0x18
0000c5 bdf1      	OUT  WDTCR,R31
0000c6 bde1      	OUT  WDTCR,R30
                 
                 ;CLEAR R2-R14
0000c7 e08d      	LDI  R24,(14-2)+1
0000c8 e0a2      	LDI  R26,2
0000c9 27bb      	CLR  R27
                 __CLEAR_REG:
0000ca 93ed      	ST   X+,R30
0000cb 958a      	DEC  R24
0000cc f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
0000cd e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
0000ce e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
0000cf e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
0000d0 93ed      	ST   X+,R30
0000d1 9701      	SBIW R24,1
0000d2 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
0000d3 e7e2      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
0000d4 e0f1      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
0000d5 9185      	LPM  R24,Z+
0000d6 9195      	LPM  R25,Z+
0000d7 9700      	SBIW R24,0
0000d8 f061      	BREQ __GLOBAL_INI_END
0000d9 91a5      	LPM  R26,Z+
0000da 91b5      	LPM  R27,Z+
0000db 9005      	LPM  R0,Z+
0000dc 9015      	LPM  R1,Z+
0000dd 01bf      	MOVW R22,R30
0000de 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
0000df 9005      	LPM  R0,Z+
0000e0 920d      	ST   X+,R0
0000e1 9701      	SBIW R24,1
0000e2 f7e1      	BRNE __GLOBAL_INI_LOOP
0000e3 01fb      	MOVW R30,R22
0000e4 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
0000e5 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
0000e6 bfed      	OUT  SPL,R30
0000e7 e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
0000e8 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
0000e9 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
0000ea e0d2      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
0000eb 940c 013b 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x260
                 
                 	.CSEG
                 ;#include <mega32.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <sdcard.h>
                 ;#include <stdio.h>
                 ;#include <delay.h>
                 ;
                 ;
                 ;interrupt [TIM1_COMPA] void timer1_compa_isr(void)
                 ; 0000 0008 {
                 
                 	.CSEG
                 _timer1_compa_isr:
0000ed 920a      	ST   -Y,R0
0000ee 921a      	ST   -Y,R1
0000ef 92fa      	ST   -Y,R15
0000f0 936a      	ST   -Y,R22
0000f1 937a      	ST   -Y,R23
0000f2 938a      	ST   -Y,R24
0000f3 939a      	ST   -Y,R25
0000f4 93aa      	ST   -Y,R26
0000f5 93ba      	ST   -Y,R27
0000f6 93ea      	ST   -Y,R30
0000f7 93fa      	ST   -Y,R31
0000f8 b7ef      	IN   R30,SREG
0000f9 93ea      	ST   -Y,R30
                 ; 0000 0009 disk_timerproc();    /* Drive timer procedure of low level disk I/O module */
0000fa 940e 0470 	CALL _disk_timerproc
                 ; 0000 000A }
0000fc 91e9      	LD   R30,Y+
0000fd bfef      	OUT  SREG,R30
0000fe 91f9      	LD   R31,Y+
0000ff 91e9      	LD   R30,Y+
000100 91b9      	LD   R27,Y+
000101 91a9      	LD   R26,Y+
000102 9199      	LD   R25,Y+
000103 9189      	LD   R24,Y+
000104 9179      	LD   R23,Y+
000105 9169      	LD   R22,Y+
000106 90f9      	LD   R15,Y+
000107 9019      	LD   R1,Y+
000108 9009      	LD   R0,Y+
000109 9518      	RETI
                 ;void usart_init(){
                 ; 0000 000B void usart_init(){
                 _usart_init:
                 ; 0000 000C // USART initialization
                 ; 0000 000D // Communication Parameters: 8 Data, 1 Stop, No Parity
                 ; 0000 000E // USART Receiver: Off
                 ; 0000 000F // USART Transmitter: On
                 ; 0000 0010 // USART Mode: Asynchronous
                 ; 0000 0011 // USART Baud Rate: 9600
                 ; 0000 0012 UCSRA=0x00;
00010a e0e0      	LDI  R30,LOW(0)
00010b b9eb      	OUT  0xB,R30
                 ; 0000 0013 UCSRB=0x08;
00010c e0e8      	LDI  R30,LOW(8)
00010d b9ea      	OUT  0xA,R30
                 ; 0000 0014 UCSRC=0x86;
00010e e8e6      	LDI  R30,LOW(134)
00010f bde0      	OUT  0x20,R30
                 ; 0000 0015 UBRRH=0x00;
000110 e0e0      	LDI  R30,LOW(0)
000111 bde0      	OUT  0x20,R30
                 ; 0000 0016 UBRRL=0x33;
000112 e3e3      	LDI  R30,LOW(51)
000113 b9e9      	OUT  0x9,R30
                 ; 0000 0017 }
000114 9508      	RET
                 ;void status(unsigned char st){
                 ; 0000 0018 void status(unsigned char st){
                 _status:
                 ; 0000 0019 if(st & RES_OK) printf("success\n\r");
000115 93aa      	ST   -Y,R26
                 ;	st -> Y+0
000116 81e8      	LD   R30,Y
000117 70e0      	ANDI R30,LOW(0x0)
000118 f019      	BREQ _0x3
                +
000119 e7e2     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
00011a e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
00011b c017      	RJMP _0x1C
                 ; 0000 001A else
                 _0x3:
                 ; 0000 001B if(st & RES_ERROR) printf("a write error occured\n\r");
00011c 81e8      	LD   R30,Y
00011d 70e1      	ANDI R30,LOW(0x1)
00011e f019      	BREQ _0x5
                +
00011f e7ec     +LDI R30 , LOW ( 2 * _0x0 + ( 10 ) )
000120 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 10 ) )
                 	__POINTW1FN _0x0,10
000121 c011      	RJMP _0x1C
                 ; 0000 001C else
                 _0x5:
                 ; 0000 001D if(st & RES_WRPRT) printf("the MMC/SD/SD HC card is write protected\n\r");
000122 81e8      	LD   R30,Y
000123 70e2      	ANDI R30,LOW(0x2)
000124 f019      	BREQ _0x7
                +
000125 e9e4     +LDI R30 , LOW ( 2 * _0x0 + ( 34 ) )
000126 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 34 ) )
                 	__POINTW1FN _0x0,34
000127 c00b      	RJMP _0x1C
                 ; 0000 001E else
                 _0x7:
                 ; 0000 001F if(st & RES_NOTRDY) printf("the disk drive has not been initialized\n\r");
000128 81e8      	LD   R30,Y
000129 70e3      	ANDI R30,LOW(0x3)
00012a f019      	BREQ _0x9
                +
00012b ebef     +LDI R30 , LOW ( 2 * _0x0 + ( 77 ) )
00012c e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 77 ) )
                 	__POINTW1FN _0x0,77
00012d c005      	RJMP _0x1C
                 ; 0000 0020 else
                 _0x9:
                 ; 0000 0021 if(st & RES_PARERR) printf("invalid parameters were passed to the function\n\r");
00012e 81e8      	LD   R30,Y
00012f 70e4      	ANDI R30,LOW(0x4)
000130 f041      	BREQ _0xB
                +
000131 eee9     +LDI R30 , LOW ( 2 * _0x0 + ( 119 ) )
000132 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 119 ) )
                 	__POINTW1FN _0x0,119
                 _0x1C:
000133 93fa      	ST   -Y,R31
000134 93ea      	ST   -Y,R30
000135 e080      	LDI  R24,0
000136 940e 05ea 	CALL _printf
000138 9622      	ADIW R28,2
                 ; 0000 0022 }
                 _0xB:
000139 940c 04a4 	JMP  _0x20A0002
                 ;
                 ;//Drv mmc;
                 ;unsigned char r;
                 ;unsigned char buffer[512];
                 ;unsigned char i;
                 ;unsigned long int sector_count;
                 ;void main(){
                 ; 0000 0029 void main(){
                 _main:
                 ; 0000 002A     OCR1A = 7813;        // Timer1: 100Hz interval (OCR1A)
00013b e8e5      	LDI  R30,LOW(7813)
00013c e1fe      	LDI  R31,HIGH(7813)
00013d bdfb      	OUT  0x2A+1,R31
00013e bdea      	OUT  0x2A,R30
                 ; 0000 002B     TCCR1A = 0x00;
00013f e0e0      	LDI  R30,LOW(0)
000140 bdef      	OUT  0x2F,R30
                 ; 0000 002C     TCCR1B = 0x0D;
000141 e0ed      	LDI  R30,LOW(13)
000142 bdee      	OUT  0x2E,R30
                 ; 0000 002D     TIMSK=0x10;
000143 e1e0      	LDI  R30,LOW(16)
000144 bfe9      	OUT  0x39,R30
                 ; 0000 002E     DDRB=1;
000145 e0e1      	LDI  R30,LOW(1)
000146 bbe7      	OUT  0x17,R30
                 ; 0000 002F 
                 ; 0000 0030     #asm("sei")
000147 9478      	sei
                 ; 0000 0031     usart_init();
000148 dfc1      	RCALL _usart_init
                 ; 0000 0032     r=disk_initialize(0);
000149 e0a0      	LDI  R26,LOW(0)
00014a d16f      	RCALL _disk_initialize
00014b 2e5e      	MOV  R5,R30
                 ; 0000 0033 
                 ; 0000 0034    if (r & STA_NOINIT) printf("\nDisk init failed\n\r");
00014c fe50      	SBRS R5,0
00014d c003      	RJMP _0xC
                +
00014e e1ea     +LDI R30 , LOW ( 2 * _0x0 + ( 168 ) )
00014f e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 168 ) )
                 	__POINTW1FN _0x0,168
000150 c00c      	RJMP _0x1D
                 ; 0000 0035    else
                 _0xC:
                 ; 0000 0036    if (r & STA_NODISK) printf("\nCard not present\n\r");
000151 fe51      	SBRS R5,1
000152 c003      	RJMP _0xE
                +
000153 e2ee     +LDI R30 , LOW ( 2 * _0x0 + ( 188 ) )
000154 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 188 ) )
                 	__POINTW1FN _0x0,188
000155 c007      	RJMP _0x1D
                 ; 0000 0037    else
                 _0xE:
                 ; 0000 0038    if (r & STA_PROTECT) printf("\nCard write\nprotected\n\r");
000156 fe52      	SBRS R5,2
000157 c003      	RJMP _0x10
                +
000158 e4e2     +LDI R30 , LOW ( 2 * _0x0 + ( 208 ) )
000159 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 208 ) )
                 	__POINTW1FN _0x0,208
00015a c002      	RJMP _0x1D
                 ; 0000 0039    /* all status flags are 0, disk initialization OK */
                 ; 0000 003A    else printf("\nInit OK\n\r");
                 _0x10:
                +
00015b e5ea     +LDI R30 , LOW ( 2 * _0x0 + ( 232 ) )
00015c e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 232 ) )
                 	__POINTW1FN _0x0,232
                 _0x1D:
00015d 93fa      	ST   -Y,R31
00015e 93ea      	ST   -Y,R30
00015f e080      	LDI  R24,0
000160 940e 05ea 	CALL _printf
000162 9622      	ADIW R28,2
                 ; 0000 003B    delay_ms(2000);
000163 eda0      	LDI  R26,LOW(2000)
000164 e0b7      	LDI  R27,HIGH(2000)
000165 940e 0660 	CALL _delay_ms
                 ; 0000 003C    //while(1);
                 ; 0000 003D 
                 ; 0000 003E    for(i=0;i<=100;i++){
000167 2444      	CLR  R4
                 _0x13:
000168 e6e4      	LDI  R30,LOW(100)
000169 15e4      	CP   R30,R4
00016a f028      	BRLO _0x14
                 ; 0000 003F     buffer[i]=i;
00016b 940e 0628 	CALL SUBOPT_0x0
00016d 8240      	ST   Z,R4
                 ; 0000 0040     }
00016e 9443      	INC  R4
00016f cff8      	RJMP _0x13
                 _0x14:
                 ; 0000 0041    status(disk_write(0,buffer,1000,1));
000170 940e 062d 	CALL SUBOPT_0x1
000172 d280      	RCALL _disk_write
000173 2fae      	MOV  R26,R30
000174 dfa0      	RCALL _status
                 ; 0000 0042 
                 ; 0000 0043    for(i=0;i<=100;i++){
000175 2444      	CLR  R4
                 _0x16:
000176 e6e4      	LDI  R30,LOW(100)
000177 15e4      	CP   R30,R4
000178 f030      	BRLO _0x17
                 ; 0000 0044     buffer[i]=0;
000179 940e 0628 	CALL SUBOPT_0x0
00017b e0a0      	LDI  R26,LOW(0)
00017c 83a0      	STD  Z+0,R26
                 ; 0000 0045     }
00017d 9443      	INC  R4
00017e cff7      	RJMP _0x16
                 _0x17:
                 ; 0000 0046 
                 ; 0000 0047    status(disk_read(0,buffer,1000,1));
00017f 940e 062d 	CALL SUBOPT_0x1
000181 d208      	RCALL _disk_read
000182 2fae      	MOV  R26,R30
000183 df91      	RCALL _status
                 ; 0000 0048 
                 ; 0000 0049    printf("\ndata=%d\n",buffer[20]);
                +
000184 e6e5     +LDI R30 , LOW ( 2 * _0x0 + ( 243 ) )
000185 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 243 ) )
                 	__POINTW1FN _0x0,243
000186 93fa      	ST   -Y,R31
000187 93ea      	ST   -Y,R30
                +
000188 91e0 0278+LDS R30 , _buffer + ( 20 )
                 	__GETB1MN _buffer,20
00018a 27ff      	CLR  R31
00018b 2766      	CLR  R22
00018c 2777      	CLR  R23
00018d 940e 069a 	CALL __PUTPARD1
00018f e084      	LDI  R24,4
000190 940e 05ea 	CALL _printf
000192 9626      	ADIW R28,6
                 ; 0000 004A 
                 ; 0000 004B 
                 ; 0000 004C    while(1);
                 _0x18:
000193 cfff      	RJMP _0x18
                 ; 0000 004D 
                 ; 0000 004E }
                 _0x1B:
000194 cfff      	RJMP _0x1B
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 _wait_ready_G100:
000195 931a      	ST   -Y,R17
000196 e3e2      	LDI  R30,LOW(50)
000197 93e0 0466 	STS  _timer2_G100,R30
000199 efef      	LDI  R30,LOW(255)
00019a b9ef      	OUT  0xF,R30
                 _0x2000004:
00019b 9b77      	SBIS 0xE,7
00019c cffe      	RJMP _0x2000004
                 _0x2000008:
00019d efef      	LDI  R30,LOW(255)
00019e b9ef      	OUT  0xF,R30
                 _0x200000A:
00019f 9b77      	SBIS 0xE,7
0001a0 cffe      	RJMP _0x200000A
0001a1 b11f      	IN   R17,15
0001a2 3f1f      	CPI  R17,255
0001a3 f021      	BREQ _0x200000D
0001a4 91e0 0466 	LDS  R30,_timer2_G100
0001a6 30e0      	CPI  R30,0
0001a7 f409      	BRNE _0x200000E
                 _0x200000D:
0001a8 c001      	RJMP _0x2000009
                 _0x200000E:
0001a9 cff3      	RJMP _0x2000008
                 _0x2000009:
0001aa 2fe1      	MOV  R30,R17
0001ab 9119      	LD   R17,Y+
0001ac 9508      	RET
                 _release_spi_G100:
0001ad 9ac4      	SBI  0x18,4
0001ae efef      	LDI  R30,LOW(255)
0001af b9ef      	OUT  0xF,R30
                 _0x200000F:
0001b0 9b77      	SBIS 0xE,7
0001b1 cffe      	RJMP _0x200000F
0001b2 9508      	RET
                 _rx_datablock_G100:
0001b3 93ba      	ST   -Y,R27
0001b4 93aa      	ST   -Y,R26
0001b5 940e 06a6 	CALL __SAVELOCR4
0001b7 e0ea      	LDI  R30,LOW(10)
0001b8 93e0 0465 	STS  _timer1_G100,R30
                 _0x2000013:
0001ba efef      	LDI  R30,LOW(255)
0001bb b9ef      	OUT  0xF,R30
                 _0x2000015:
0001bc 9b77      	SBIS 0xE,7
0001bd cffe      	RJMP _0x2000015
0001be b11f      	IN   R17,15
0001bf 3f1f      	CPI  R17,255
0001c0 f421      	BRNE _0x2000018
0001c1 91e0 0465 	LDS  R30,_timer1_G100
0001c3 30e0      	CPI  R30,0
0001c4 f409      	BRNE _0x2000019
                 _0x2000018:
0001c5 c001      	RJMP _0x2000014
                 _0x2000019:
0001c6 cff3      	RJMP _0x2000013
                 _0x2000014:
0001c7 3f1e      	CPI  R17,254
0001c8 f021      	BREQ _0x200001A
0001c9 e0e0      	LDI  R30,LOW(0)
0001ca 940e 06ad 	CALL __LOADLOCR4
0001cc c2a1      	RJMP _0x20A0003
                 _0x200001A:
                +
0001cd 812e     +LDD R18 , Y + 6
0001ce 813f     +LDD R19 , Y + 6 + 1
                 	__GETWRS 18,19,6
                 _0x200001C:
0001cf efef      	LDI  R30,LOW(255)
0001d0 b9ef      	OUT  0xF,R30
                 _0x200001E:
0001d1 9b77      	SBIS 0xE,7
0001d2 cffe      	RJMP _0x200001E
0001d3 933f      	PUSH R19
0001d4 932f      	PUSH R18
                +
0001d5 5f2f     +SUBI R18 , LOW ( - 1 )
0001d6 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0001d7 b1ef      	IN   R30,0xF
0001d8 91af      	POP  R26
0001d9 91bf      	POP  R27
0001da 93ec      	ST   X,R30
0001db efef      	LDI  R30,LOW(255)
0001dc b9ef      	OUT  0xF,R30
                 _0x2000021:
0001dd 9b77      	SBIS 0xE,7
0001de cffe      	RJMP _0x2000021
0001df 933f      	PUSH R19
0001e0 932f      	PUSH R18
                +
0001e1 5f2f     +SUBI R18 , LOW ( - 1 )
0001e2 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0001e3 b1ef      	IN   R30,0xF
0001e4 91af      	POP  R26
0001e5 91bf      	POP  R27
0001e6 93ec      	ST   X,R30
0001e7 efef      	LDI  R30,LOW(255)
0001e8 b9ef      	OUT  0xF,R30
                 _0x2000024:
0001e9 9b77      	SBIS 0xE,7
0001ea cffe      	RJMP _0x2000024
0001eb 933f      	PUSH R19
0001ec 932f      	PUSH R18
                +
0001ed 5f2f     +SUBI R18 , LOW ( - 1 )
0001ee 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0001ef b1ef      	IN   R30,0xF
0001f0 91af      	POP  R26
0001f1 91bf      	POP  R27
0001f2 93ec      	ST   X,R30
0001f3 efef      	LDI  R30,LOW(255)
0001f4 b9ef      	OUT  0xF,R30
                 _0x2000027:
0001f5 9b77      	SBIS 0xE,7
0001f6 cffe      	RJMP _0x2000027
0001f7 933f      	PUSH R19
0001f8 932f      	PUSH R18
                +
0001f9 5f2f     +SUBI R18 , LOW ( - 1 )
0001fa 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0001fb b1ef      	IN   R30,0xF
0001fc 91af      	POP  R26
0001fd 91bf      	POP  R27
0001fe 93ec      	ST   X,R30
0001ff 81ec      	LDD  R30,Y+4
000200 81fd      	LDD  R31,Y+4+1
000201 9734      	SBIW R30,4
000202 83ec      	STD  Y+4,R30
000203 83fd      	STD  Y+4+1,R31
000204 f651      	BRNE _0x200001C
000205 efef      	LDI  R30,LOW(255)
000206 b9ef      	OUT  0xF,R30
                 _0x200002A:
000207 9b77      	SBIS 0xE,7
000208 cffe      	RJMP _0x200002A
000209 efef      	LDI  R30,LOW(255)
00020a b9ef      	OUT  0xF,R30
                 _0x200002D:
00020b 9b77      	SBIS 0xE,7
00020c cffe      	RJMP _0x200002D
00020d e0e1      	LDI  R30,LOW(1)
00020e 940e 06ad 	CALL __LOADLOCR4
000210 c25d      	RJMP _0x20A0003
                 _tx_datablock_G100:
000211 93aa      	ST   -Y,R26
000212 940e 06a6 	CALL __SAVELOCR4
000214 df80      	RCALL _wait_ready_G100
000215 3fef      	CPI  R30,LOW(0xFF)
000216 f021      	BREQ _0x2000030
000217 e0e0      	LDI  R30,LOW(0)
000218 940e 06ad 	CALL __LOADLOCR4
00021a c087      	RJMP _0x20A0008
                 _0x2000030:
00021b 81ec      	LDD  R30,Y+4
00021c b9ef      	OUT  0xF,R30
                 _0x2000031:
00021d 9b77      	SBIS 0xE,7
00021e cffe      	RJMP _0x2000031
00021f 81ac      	LDD  R26,Y+4
000220 3fad      	CPI  R26,LOW(0xFD)
000221 f149      	BREQ _0x2000034
000222 e000      	LDI  R16,LOW(0)
                +
000223 812d     +LDD R18 , Y + 5
000224 813e     +LDD R19 , Y + 5 + 1
                 	__GETWRS 18,19,5
                 _0x2000036:
000225 01d9      	MOVW R26,R18
                +
000226 5f2f     +SUBI R18 , LOW ( - 1 )
000227 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
000228 91ec      	LD   R30,X
000229 b9ef      	OUT  0xF,R30
                 _0x2000038:
00022a 9b77      	SBIS 0xE,7
00022b cffe      	RJMP _0x2000038
00022c 01d9      	MOVW R26,R18
                +
00022d 5f2f     +SUBI R18 , LOW ( - 1 )
00022e 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00022f 91ec      	LD   R30,X
000230 b9ef      	OUT  0xF,R30
                 _0x200003B:
000231 9b77      	SBIS 0xE,7
000232 cffe      	RJMP _0x200003B
000233 5001      	SUBI R16,LOW(1)
000234 3000      	CPI  R16,0
000235 f779      	BRNE _0x2000036
000236 efef      	LDI  R30,LOW(255)
000237 b9ef      	OUT  0xF,R30
                 _0x200003E:
000238 9b77      	SBIS 0xE,7
000239 cffe      	RJMP _0x200003E
00023a efef      	LDI  R30,LOW(255)
00023b b9ef      	OUT  0xF,R30
                 _0x2000041:
00023c 9b77      	SBIS 0xE,7
00023d cffe      	RJMP _0x2000041
00023e efef      	LDI  R30,LOW(255)
00023f b9ef      	OUT  0xF,R30
                 _0x2000044:
000240 9b77      	SBIS 0xE,7
000241 cffe      	RJMP _0x2000044
000242 b11f      	IN   R17,15
000243 2fe1      	MOV  R30,R17
000244 71ef      	ANDI R30,LOW(0x1F)
000245 30e5      	CPI  R30,LOW(0x5)
000246 f021      	BREQ _0x2000047
000247 e0e0      	LDI  R30,LOW(0)
000248 940e 06ad 	CALL __LOADLOCR4
00024a c057      	RJMP _0x20A0008
                 _0x2000047:
                 _0x2000034:
00024b e0e1      	LDI  R30,LOW(1)
00024c 940e 06ad 	CALL __LOADLOCR4
00024e c053      	RJMP _0x20A0008
                 _send_cmd_G100:
00024f 940e 069f 	CALL __PUTPARD2
000251 931a      	ST   -Y,R17
000252 930a      	ST   -Y,R16
000253 81ee      	LDD  R30,Y+6
000254 78e0      	ANDI R30,LOW(0x80)
000255 f069      	BREQ _0x2000048
000256 81ee      	LDD  R30,Y+6
000257 77ef      	ANDI R30,0x7F
000258 83ee      	STD  Y+6,R30
000259 e7e7      	LDI  R30,LOW(119)
00025a 93ea      	ST   -Y,R30
                +
00025b e0a0     +LDI R26 , LOW ( 0x0 )
00025c e0b0     +LDI R27 , HIGH ( 0x0 )
00025d e080     +LDI R24 , BYTE3 ( 0x0 )
00025e e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00025f dfef      	RCALL _send_cmd_G100
000260 2f0e      	MOV  R16,R30
000261 3002      	CPI  R16,2
000262 f5e0      	BRSH _0x20A0007
                 _0x2000048:
000263 9ac4      	SBI  0x18,4
000264 98c4      	CBI  0x18,4
000265 df2f      	RCALL _wait_ready_G100
000266 3fef      	CPI  R30,LOW(0xFF)
000267 f011      	BREQ _0x200004A
000268 efef      	LDI  R30,LOW(255)
000269 c036      	RJMP _0x20A0006
                 _0x200004A:
00026a 81ee      	LDD  R30,Y+6
00026b b9ef      	OUT  0xF,R30
                 _0x200004B:
00026c 9b77      	SBIS 0xE,7
00026d cffe      	RJMP _0x200004B
00026e 81ed      	LDD  R30,Y+5
00026f b9ef      	OUT  0xF,R30
                 _0x200004E:
000270 9b77      	SBIS 0xE,7
000271 cffe      	RJMP _0x200004E
000272 81ec      	LDD  R30,Y+4
000273 b9ef      	OUT  0xF,R30
                 _0x2000051:
000274 9b77      	SBIS 0xE,7
000275 cffe      	RJMP _0x2000051
000276 81eb      	LDD  R30,Y+3
000277 b9ef      	OUT  0xF,R30
                 _0x2000054:
000278 9b77      	SBIS 0xE,7
000279 cffe      	RJMP _0x2000054
00027a 81ea      	LDD  R30,Y+2
00027b b9ef      	OUT  0xF,R30
                 _0x2000057:
00027c 9b77      	SBIS 0xE,7
00027d cffe      	RJMP _0x2000057
00027e e011      	LDI  R17,LOW(1)
00027f 81ae      	LDD  R26,Y+6
000280 34a0      	CPI  R26,LOW(0x40)
000281 f411      	BRNE _0x200005A
000282 e915      	LDI  R17,LOW(149)
000283 c004      	RJMP _0x200005B
                 _0x200005A:
000284 81ae      	LDD  R26,Y+6
000285 34a8      	CPI  R26,LOW(0x48)
000286 f409      	BRNE _0x200005C
000287 e817      	LDI  R17,LOW(135)
                 _0x200005C:
                 _0x200005B:
000288 b91f      	OUT  0xF,R17
                 _0x200005D:
000289 9b77      	SBIS 0xE,7
00028a cffe      	RJMP _0x200005D
00028b 81ae      	LDD  R26,Y+6
00028c 34ac      	CPI  R26,LOW(0x4C)
00028d f421      	BRNE _0x2000060
00028e efef      	LDI  R30,LOW(255)
00028f b9ef      	OUT  0xF,R30
                 _0x2000061:
000290 9b77      	SBIS 0xE,7
000291 cffe      	RJMP _0x2000061
                 _0x2000060:
000292 ef1f      	LDI  R17,LOW(255)
                 _0x2000065:
000293 efef      	LDI  R30,LOW(255)
000294 b9ef      	OUT  0xF,R30
                 _0x2000067:
000295 9b77      	SBIS 0xE,7
000296 cffe      	RJMP _0x2000067
000297 b10f      	IN   R16,15
000298 ff07      	SBRS R16,7
000299 c003      	RJMP _0x200006A
00029a 5011      	SUBI R17,LOW(1)
00029b 3010      	CPI  R17,0
00029c f409      	BRNE _0x200006B
                 _0x200006A:
00029d c001      	RJMP _0x2000066
                 _0x200006B:
00029e cff4      	RJMP _0x2000065
                 _0x2000066:
                 _0x20A0007:
00029f 2fe0      	MOV  R30,R16
                 _0x20A0006:
0002a0 8119      	LDD  R17,Y+1
0002a1 8108      	LDD  R16,Y+0
                 _0x20A0008:
0002a2 9627      	ADIW R28,7
0002a3 9508      	RET
                 _rx_spi4_G100:
0002a4 93ba      	ST   -Y,R27
0002a5 93aa      	ST   -Y,R26
0002a6 931a      	ST   -Y,R17
0002a7 e014      	LDI  R17,4
                 _0x200006D:
0002a8 efef      	LDI  R30,LOW(255)
0002a9 b9ef      	OUT  0xF,R30
                 _0x200006F:
0002aa 9b77      	SBIS 0xE,7
0002ab cffe      	RJMP _0x200006F
0002ac 81a9      	LDD  R26,Y+1
0002ad 81ba      	LDD  R27,Y+1+1
0002ae 9611      	ADIW R26,1
0002af 83a9      	STD  Y+1,R26
0002b0 83ba      	STD  Y+1+1,R27
0002b1 9711      	SBIW R26,1
0002b2 b1ef      	IN   R30,0xF
0002b3 93ec      	ST   X,R30
0002b4 5011      	SUBI R17,LOW(1)
0002b5 3010      	CPI  R17,0
0002b6 f789      	BRNE _0x200006D
0002b7 8118      	LDD  R17,Y+0
0002b8 940c 04b1 	JMP  _0x20A0001
                 _disk_initialize:
0002ba 93aa      	ST   -Y,R26
0002bb 9724      	SBIW R28,4
0002bc 940e 06a6 	CALL __SAVELOCR4
0002be 85e8      	LDD  R30,Y+8
0002bf 30e0      	CPI  R30,0
0002c0 f011      	BREQ _0x2000072
0002c1 e0e1      	LDI  R30,LOW(1)
0002c2 c0c3      	RJMP _0x20A0005
                 _0x2000072:
0002c3 988a      	CBI  0x11,2
0002c4 98b9      	CBI  0x17,1
0002c5 e0ea      	LDI  R30,LOW(10)
0002c6 93e0 0465 	STS  _timer1_G100,R30
                 _0x2000073:
0002c8 91e0 0465 	LDS  R30,_timer1_G100
0002ca 30e0      	CPI  R30,0
0002cb f7e1      	BRNE _0x2000073
0002cc 91e0 0464 	LDS  R30,_status_G100
0002ce 70e2      	ANDI R30,LOW(0x2)
0002cf f009      	BREQ _0x2000076
0002d0 c0b3      	RJMP _0x20A0004
                 _0x2000076:
0002d1 9abc      	SBI  0x17,4
0002d2 9ac4      	SBI  0x18,4
0002d3 b3e8      	IN   R30,0x18
0002d4 75ef      	ANDI R30,LOW(0x5F)
0002d5 bbe8      	OUT  0x18,R30
0002d6 9ac6      	SBI  0x18,6
0002d7 98be      	CBI  0x17,6
0002d8 b3e7      	IN   R30,0x17
0002d9 6be0      	ORI  R30,LOW(0xB0)
0002da bbe7      	OUT  0x17,R30
0002db e5e2      	LDI  R30,LOW(82)
0002dc b9ed      	OUT  0xD,R30
0002dd e0e0      	LDI  R30,LOW(0)
0002de b9ee      	OUT  0xE,R30
0002df ef3f      	LDI  R19,LOW(255)
                 _0x2000078:
0002e0 e01a      	LDI  R17,LOW(10)
                 _0x200007B:
0002e1 efef      	LDI  R30,LOW(255)
0002e2 b9ef      	OUT  0xF,R30
                 _0x200007D:
0002e3 9b77      	SBIS 0xE,7
0002e4 cffe      	RJMP _0x200007D
0002e5 5011      	SUBI R17,LOW(1)
0002e6 3010      	CPI  R17,0
0002e7 f7c9      	BRNE _0x200007B
0002e8 e4e0      	LDI  R30,LOW(64)
0002e9 93ea      	ST   -Y,R30
                +
0002ea e0a0     +LDI R26 , LOW ( 0x0 )
0002eb e0b0     +LDI R27 , HIGH ( 0x0 )
0002ec e080     +LDI R24 , BYTE3 ( 0x0 )
0002ed e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
0002ee df60      	RCALL _send_cmd_G100
0002ef 2f0e      	MOV  R16,R30
0002f0 5031      	SUBI R19,LOW(1)
0002f1 3001      	CPI  R16,1
0002f2 f011      	BREQ _0x2000080
0002f3 3030      	CPI  R19,0
0002f4 f409      	BRNE _0x2000081
                 _0x2000080:
0002f5 c001      	RJMP _0x2000079
                 _0x2000081:
0002f6 cfe9      	RJMP _0x2000078
                 _0x2000079:
0002f7 e030      	LDI  R19,LOW(0)
0002f8 3001      	CPI  R16,1
0002f9 f011      	BREQ PC+3
0002fa 940c 0364 	JMP _0x2000082
0002fc e6e4      	LDI  R30,LOW(100)
0002fd 93e0 0465 	STS  _timer1_G100,R30
0002ff e4e8      	LDI  R30,LOW(72)
000300 93ea      	ST   -Y,R30
                +
000301 eaaa     +LDI R26 , LOW ( 0x1AA )
000302 e0b1     +LDI R27 , HIGH ( 0x1AA )
000303 e080     +LDI R24 , BYTE3 ( 0x1AA )
000304 e090     +LDI R25 , BYTE4 ( 0x1AA )
                 	__GETD2N 0x1AA
000305 df49      	RCALL _send_cmd_G100
000306 30e1      	CPI  R30,LOW(0x1)
000307 f591      	BRNE _0x2000083
000308 01de      	MOVW R26,R28
000309 9614      	ADIW R26,4
00030a df99      	RCALL _rx_spi4_G100
00030b 81ae      	LDD  R26,Y+6
00030c 30a1      	CPI  R26,LOW(0x1)
00030d f419      	BRNE _0x2000085
00030e 81af      	LDD  R26,Y+7
00030f 3aaa      	CPI  R26,LOW(0xAA)
000310 f009      	BREQ _0x2000086
                 _0x2000085:
000311 c027      	RJMP _0x2000084
                 _0x2000086:
                 _0x2000087:
000312 91e0 0465 	LDS  R30,_timer1_G100
000314 30e0      	CPI  R30,0
000315 f049      	BREQ _0x200008A
000316 eee9      	LDI  R30,LOW(233)
000317 93ea      	ST   -Y,R30
                +
000318 e0a0     +LDI R26 , LOW ( 0x40000000 )
000319 e0b0     +LDI R27 , HIGH ( 0x40000000 )
00031a e080     +LDI R24 , BYTE3 ( 0x40000000 )
00031b e490     +LDI R25 , BYTE4 ( 0x40000000 )
                 	__GETD2N 0x40000000
00031c df32      	RCALL _send_cmd_G100
00031d 30e0      	CPI  R30,0
00031e f409      	BRNE _0x200008B
                 _0x200008A:
00031f c001      	RJMP _0x2000089
                 _0x200008B:
000320 cff1      	RJMP _0x2000087
                 _0x2000089:
000321 91e0 0465 	LDS  R30,_timer1_G100
000323 30e0      	CPI  R30,0
000324 f049      	BREQ _0x200008D
000325 e7ea      	LDI  R30,LOW(122)
000326 93ea      	ST   -Y,R30
                +
000327 e0a0     +LDI R26 , LOW ( 0x0 )
000328 e0b0     +LDI R27 , HIGH ( 0x0 )
000329 e080     +LDI R24 , BYTE3 ( 0x0 )
00032a e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00032b df23      	RCALL _send_cmd_G100
00032c 30e0      	CPI  R30,0
00032d f009      	BREQ _0x200008E
                 _0x200008D:
00032e c00a      	RJMP _0x200008C
                 _0x200008E:
00032f 01de      	MOVW R26,R28
000330 9614      	ADIW R26,4
000331 df72      	RCALL _rx_spi4_G100
000332 81ec      	LDD  R30,Y+4
000333 74e0      	ANDI R30,LOW(0x40)
000334 f011      	BREQ _0x200008F
000335 e0ec      	LDI  R30,LOW(12)
000336 c001      	RJMP _0x2000090
                 _0x200008F:
000337 e0e4      	LDI  R30,LOW(4)
                 _0x2000090:
000338 2f3e      	MOV  R19,R30
                 _0x200008C:
                 _0x2000084:
000339 c02a      	RJMP _0x2000092
                 _0x2000083:
00033a eee9      	LDI  R30,LOW(233)
00033b 93ea      	ST   -Y,R30
                +
00033c e0a0     +LDI R26 , LOW ( 0x0 )
00033d e0b0     +LDI R27 , HIGH ( 0x0 )
00033e e080     +LDI R24 , BYTE3 ( 0x0 )
00033f e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
000340 df0e      	RCALL _send_cmd_G100
000341 30e2      	CPI  R30,LOW(0x2)
000342 f418      	BRSH _0x2000093
000343 e032      	LDI  R19,LOW(2)
000344 ee09      	LDI  R16,LOW(233)
000345 c002      	RJMP _0x2000094
                 _0x2000093:
000346 e031      	LDI  R19,LOW(1)
000347 e401      	LDI  R16,LOW(65)
                 _0x2000094:
                 _0x2000095:
000348 91e0 0465 	LDS  R30,_timer1_G100
00034a 30e0      	CPI  R30,0
00034b f041      	BREQ _0x2000098
00034c 930a      	ST   -Y,R16
                +
00034d e0a0     +LDI R26 , LOW ( 0x0 )
00034e e0b0     +LDI R27 , HIGH ( 0x0 )
00034f e080     +LDI R24 , BYTE3 ( 0x0 )
000350 e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
000351 defd      	RCALL _send_cmd_G100
000352 30e0      	CPI  R30,0
000353 f409      	BRNE _0x2000099
                 _0x2000098:
000354 c001      	RJMP _0x2000097
                 _0x2000099:
000355 cff2      	RJMP _0x2000095
                 _0x2000097:
000356 91e0 0465 	LDS  R30,_timer1_G100
000358 30e0      	CPI  R30,0
000359 f049      	BREQ _0x200009B
00035a e5e0      	LDI  R30,LOW(80)
00035b 93ea      	ST   -Y,R30
                +
00035c e0a0     +LDI R26 , LOW ( 0x200 )
00035d e0b2     +LDI R27 , HIGH ( 0x200 )
00035e e080     +LDI R24 , BYTE3 ( 0x200 )
00035f e090     +LDI R25 , BYTE4 ( 0x200 )
                 	__GETD2N 0x200
000360 deee      	RCALL _send_cmd_G100
000361 30e0      	CPI  R30,0
000362 f009      	BREQ _0x200009A
                 _0x200009B:
000363 e030      	LDI  R19,LOW(0)
                 _0x200009A:
                 _0x2000092:
                 _0x2000082:
000364 9330 0467 	STS  _card_type_G100,R19
000366 de46      	RCALL _release_spi_G100
000367 3030      	CPI  R19,0
000368 f051      	BREQ _0x200009D
000369 91e0 0464 	LDS  R30,_status_G100
00036b 7fee      	ANDI R30,0xFE
00036c 93e0 0464 	STS  _status_G100,R30
00036e e5e0      	LDI  R30,LOW(80)
00036f b9ed      	OUT  0xD,R30
000370 e0e1      	LDI  R30,LOW(1)
000371 b9ee      	OUT  0xE,R30
000372 c011      	RJMP _0x200009E
                 _0x200009D:
000373 98c4      	CBI  0x18,4
000374 de20      	RCALL _wait_ready_G100
000375 de37      	RCALL _release_spi_G100
000376 e0e0      	LDI  R30,LOW(0)
000377 b9ed      	OUT  0xD,R30
000378 b3e7      	IN   R30,0x17
000379 70ef      	ANDI R30,LOW(0xF)
00037a bbe7      	OUT  0x17,R30
00037b b3e8      	IN   R30,0x18
00037c 70ef      	ANDI R30,LOW(0xF)
00037d bbe8      	OUT  0x18,R30
00037e 98bc      	CBI  0x17,4
00037f 91e0 0464 	LDS  R30,_status_G100
000381 60e1      	ORI  R30,1
000382 93e0 0464 	STS  _status_G100,R30
                 _0x200009E:
                 _0x20A0004:
000384 91e0 0464 	LDS  R30,_status_G100
                 _0x20A0005:
000386 940e 06ad 	CALL __LOADLOCR4
000388 9629      	ADIW R28,9
000389 9508      	RET
                 _disk_read:
00038a 93aa      	ST   -Y,R26
00038b 81ef      	LDD  R30,Y+7
00038c 30e0      	CPI  R30,0
00038d f419      	BRNE _0x20000A1
00038e 81e8      	LD   R30,Y
00038f 30e0      	CPI  R30,0
000390 f419      	BRNE _0x20000A0
                 _0x20000A1:
000391 e0e4      	LDI  R30,LOW(4)
000392 e0f0      	LDI  R31,HIGH(4)
000393 c0da      	RJMP _0x20A0003
                 _0x20000A0:
000394 91e0 0464 	LDS  R30,_status_G100
000396 70e1      	ANDI R30,LOW(0x1)
000397 f019      	BREQ _0x20000A3
000398 e0e3      	LDI  R30,LOW(3)
000399 e0f0      	LDI  R31,HIGH(3)
00039a c0d3      	RJMP _0x20A0003
                 _0x20000A3:
00039b 91e0 0467 	LDS  R30,_card_type_G100
00039d 70e8      	ANDI R30,LOW(0x8)
00039e f471      	BRNE _0x20000A4
                +
00039f 81e9     +LDD R30 , Y + 1
0003a0 81fa     +LDD R31 , Y + 1 + 1
0003a1 816b     +LDD R22 , Y + 1 + 2
0003a2 817c     +LDD R23 , Y + 1 + 3
                 	__GETD1S 1
                +
0003a3 e0a0     +LDI R26 , LOW ( 0x200 )
0003a4 e0b2     +LDI R27 , HIGH ( 0x200 )
0003a5 e080     +LDI R24 , BYTE3 ( 0x200 )
0003a6 e090     +LDI R25 , BYTE4 ( 0x200 )
                 	__GETD2N 0x200
0003a7 940e 0672 	CALL __MULD12U
                +
0003a9 83e9     +STD Y + 1 , R30
0003aa 83fa     +STD Y + 1 + 1 , R31
0003ab 836b     +STD Y + 1 + 2 , R22
0003ac 837c     +STD Y + 1 + 3 , R23
                 	__PUTD1S 1
                 _0x20000A4:
0003ad 81a8      	LD   R26,Y
0003ae 30a1      	CPI  R26,LOW(0x1)
0003af f4b1      	BRNE _0x20000A5
0003b0 e5e1      	LDI  R30,LOW(81)
0003b1 93ea      	ST   -Y,R30
                +
0003b2 81aa     +LDD R26 , Y + 2
0003b3 81bb     +LDD R27 , Y + 2 + 1
0003b4 818c     +LDD R24 , Y + 2 + 2
0003b5 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
0003b6 de98      	RCALL _send_cmd_G100
0003b7 30e0      	CPI  R30,0
0003b8 f449      	BRNE _0x20000A7
0003b9 81ed      	LDD  R30,Y+5
0003ba 81fe      	LDD  R31,Y+5+1
0003bb 93fa      	ST   -Y,R31
0003bc 93ea      	ST   -Y,R30
0003bd e0a0      	LDI  R26,LOW(512)
0003be e0b2      	LDI  R27,HIGH(512)
0003bf ddf3      	RCALL _rx_datablock_G100
0003c0 30e0      	CPI  R30,0
0003c1 f409      	BRNE _0x20000A8
                 _0x20000A7:
0003c2 c002      	RJMP _0x20000A6
                 _0x20000A8:
0003c3 e0e0      	LDI  R30,LOW(0)
0003c4 83e8      	ST   Y,R30
                 _0x20000A6:
0003c5 c023      	RJMP _0x20000A9
                 _0x20000A5:
0003c6 e5e2      	LDI  R30,LOW(82)
0003c7 93ea      	ST   -Y,R30
                +
0003c8 81aa     +LDD R26 , Y + 2
0003c9 81bb     +LDD R27 , Y + 2 + 1
0003ca 818c     +LDD R24 , Y + 2 + 2
0003cb 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
0003cc de82      	RCALL _send_cmd_G100
0003cd 30e0      	CPI  R30,0
0003ce f4d1      	BRNE _0x20000AA
                 _0x20000AC:
0003cf 81ed      	LDD  R30,Y+5
0003d0 81fe      	LDD  R31,Y+5+1
0003d1 93fa      	ST   -Y,R31
0003d2 93ea      	ST   -Y,R30
0003d3 e0a0      	LDI  R26,LOW(512)
0003d4 e0b2      	LDI  R27,HIGH(512)
0003d5 dddd      	RCALL _rx_datablock_G100
0003d6 30e0      	CPI  R30,0
0003d7 f051      	BREQ _0x20000AD
0003d8 81ed      	LDD  R30,Y+5
0003d9 81fe      	LDD  R31,Y+5+1
0003da 50e0      	SUBI R30,LOW(-512)
0003db 4ffe      	SBCI R31,HIGH(-512)
0003dc 83ed      	STD  Y+5,R30
0003dd 83fe      	STD  Y+5+1,R31
0003de 81e8      	LD   R30,Y
0003df 50e1      	SUBI R30,LOW(1)
0003e0 83e8      	ST   Y,R30
0003e1 f769      	BRNE _0x20000AC
                 _0x20000AD:
0003e2 e4ec      	LDI  R30,LOW(76)
0003e3 93ea      	ST   -Y,R30
                +
0003e4 e0a0     +LDI R26 , LOW ( 0x0 )
0003e5 e0b0     +LDI R27 , HIGH ( 0x0 )
0003e6 e080     +LDI R24 , BYTE3 ( 0x0 )
0003e7 e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
0003e8 de66      	RCALL _send_cmd_G100
                 _0x20000AA:
                 _0x20000A9:
0003e9 ddc3      	RCALL _release_spi_G100
0003ea 81e8      	LD   R30,Y
0003eb 30e0      	CPI  R30,0
0003ec f019      	BREQ _0x20000AF
0003ed e0e1      	LDI  R30,LOW(1)
0003ee e0f0      	LDI  R31,HIGH(1)
0003ef c002      	RJMP _0x20000B0
                 _0x20000AF:
0003f0 e0e0      	LDI  R30,LOW(0)
0003f1 e0f0      	LDI  R31,HIGH(0)
                 _0x20000B0:
0003f2 c07b      	RJMP _0x20A0003
                 _disk_write:
0003f3 93aa      	ST   -Y,R26
0003f4 81ef      	LDD  R30,Y+7
0003f5 30e0      	CPI  R30,0
0003f6 f419      	BRNE _0x20000B3
0003f7 81e8      	LD   R30,Y
0003f8 30e0      	CPI  R30,0
0003f9 f419      	BRNE _0x20000B2
                 _0x20000B3:
0003fa e0e4      	LDI  R30,LOW(4)
0003fb e0f0      	LDI  R31,HIGH(4)
0003fc c071      	RJMP _0x20A0003
                 _0x20000B2:
0003fd 91e0 0464 	LDS  R30,_status_G100
0003ff 70e1      	ANDI R30,LOW(0x1)
000400 f019      	BREQ _0x20000B5
000401 e0e3      	LDI  R30,LOW(3)
000402 e0f0      	LDI  R31,HIGH(3)
000403 c06a      	RJMP _0x20A0003
                 _0x20000B5:
000404 91e0 0464 	LDS  R30,_status_G100
000406 70e4      	ANDI R30,LOW(0x4)
000407 f019      	BREQ _0x20000B6
000408 e0e2      	LDI  R30,LOW(2)
000409 e0f0      	LDI  R31,HIGH(2)
00040a c063      	RJMP _0x20A0003
                 _0x20000B6:
00040b 91e0 0467 	LDS  R30,_card_type_G100
00040d 70e8      	ANDI R30,LOW(0x8)
00040e f471      	BRNE _0x20000B7
                +
00040f 81e9     +LDD R30 , Y + 1
000410 81fa     +LDD R31 , Y + 1 + 1
000411 816b     +LDD R22 , Y + 1 + 2
000412 817c     +LDD R23 , Y + 1 + 3
                 	__GETD1S 1
                +
000413 e0a0     +LDI R26 , LOW ( 0x200 )
000414 e0b2     +LDI R27 , HIGH ( 0x200 )
000415 e080     +LDI R24 , BYTE3 ( 0x200 )
000416 e090     +LDI R25 , BYTE4 ( 0x200 )
                 	__GETD2N 0x200
000417 940e 0672 	CALL __MULD12U
                +
000419 83e9     +STD Y + 1 , R30
00041a 83fa     +STD Y + 1 + 1 , R31
00041b 836b     +STD Y + 1 + 2 , R22
00041c 837c     +STD Y + 1 + 3 , R23
                 	__PUTD1S 1
                 _0x20000B7:
00041d 81a8      	LD   R26,Y
00041e 30a1      	CPI  R26,LOW(0x1)
00041f f4a9      	BRNE _0x20000B8
000420 e5e8      	LDI  R30,LOW(88)
000421 93ea      	ST   -Y,R30
                +
000422 81aa     +LDD R26 , Y + 2
000423 81bb     +LDD R27 , Y + 2 + 1
000424 818c     +LDD R24 , Y + 2 + 2
000425 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
000426 de28      	RCALL _send_cmd_G100
000427 30e0      	CPI  R30,0
000428 f441      	BRNE _0x20000BA
000429 81ed      	LDD  R30,Y+5
00042a 81fe      	LDD  R31,Y+5+1
00042b 93fa      	ST   -Y,R31
00042c 93ea      	ST   -Y,R30
00042d efae      	LDI  R26,LOW(254)
00042e dde2      	RCALL _tx_datablock_G100
00042f 30e0      	CPI  R30,0
000430 f409      	BRNE _0x20000BB
                 _0x20000BA:
000431 c002      	RJMP _0x20000B9
                 _0x20000BB:
000432 e0e0      	LDI  R30,LOW(0)
000433 83e8      	ST   Y,R30
                 _0x20000B9:
000434 c030      	RJMP _0x20000BC
                 _0x20000B8:
000435 91e0 0467 	LDS  R30,_card_type_G100
000437 70e6      	ANDI R30,LOW(0x6)
000438 f039      	BREQ _0x20000BD
000439 ede7      	LDI  R30,LOW(215)
00043a 93ea      	ST   -Y,R30
00043b 81a9      	LDD  R26,Y+1
00043c 27bb      	CLR  R27
00043d 2788      	CLR  R24
00043e 2799      	CLR  R25
00043f de0f      	RCALL _send_cmd_G100
                 _0x20000BD:
000440 e5e9      	LDI  R30,LOW(89)
000441 93ea      	ST   -Y,R30
                +
000442 81aa     +LDD R26 , Y + 2
000443 81bb     +LDD R27 , Y + 2 + 1
000444 818c     +LDD R24 , Y + 2 + 2
000445 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
000446 de08      	RCALL _send_cmd_G100
000447 30e0      	CPI  R30,0
000448 f4e1      	BRNE _0x20000BE
                 _0x20000C0:
000449 81ed      	LDD  R30,Y+5
00044a 81fe      	LDD  R31,Y+5+1
00044b 93fa      	ST   -Y,R31
00044c 93ea      	ST   -Y,R30
00044d efac      	LDI  R26,LOW(252)
00044e ddc2      	RCALL _tx_datablock_G100
00044f 30e0      	CPI  R30,0
000450 f051      	BREQ _0x20000C1
000451 81ed      	LDD  R30,Y+5
000452 81fe      	LDD  R31,Y+5+1
000453 50e0      	SUBI R30,LOW(-512)
000454 4ffe      	SBCI R31,HIGH(-512)
000455 83ed      	STD  Y+5,R30
000456 83fe      	STD  Y+5+1,R31
000457 81e8      	LD   R30,Y
000458 50e1      	SUBI R30,LOW(1)
000459 83e8      	ST   Y,R30
00045a f771      	BRNE _0x20000C0
                 _0x20000C1:
00045b e0e0      	LDI  R30,LOW(0)
00045c e0f0      	LDI  R31,HIGH(0)
00045d 93fa      	ST   -Y,R31
00045e 93ea      	ST   -Y,R30
00045f efad      	LDI  R26,LOW(253)
000460 ddb0      	RCALL _tx_datablock_G100
000461 30e0      	CPI  R30,0
000462 f411      	BRNE _0x20000C3
000463 e0e1      	LDI  R30,LOW(1)
000464 83e8      	ST   Y,R30
                 _0x20000C3:
                 _0x20000BE:
                 _0x20000BC:
000465 dd47      	RCALL _release_spi_G100
000466 81e8      	LD   R30,Y
000467 30e0      	CPI  R30,0
000468 f019      	BREQ _0x20000C4
000469 e0e1      	LDI  R30,LOW(1)
00046a e0f0      	LDI  R31,HIGH(1)
00046b c002      	RJMP _0x20000C5
                 _0x20000C4:
00046c e0e0      	LDI  R30,LOW(0)
00046d e0f0      	LDI  R31,HIGH(0)
                 _0x20000C5:
                 _0x20A0003:
00046e 9628      	ADIW R28,8
00046f 9508      	RET
                 _disk_timerproc:
000470 931a      	ST   -Y,R17
000471 930a      	ST   -Y,R16
000472 9110 0465 	LDS  R17,_timer1_G100
000474 3010      	CPI  R17,0
000475 f019      	BREQ _0x20000FA
000476 5011      	SUBI R17,LOW(1)
000477 9310 0465 	STS  _timer1_G100,R17
                 _0x20000FA:
000479 9110 0466 	LDS  R17,_timer2_G100
00047b 3010      	CPI  R17,0
00047c f019      	BREQ _0x20000FB
00047d 5011      	SUBI R17,LOW(1)
00047e 9310 0466 	STS  _timer2_G100,R17
                 _0x20000FB:
000480 9110 0468 	LDS  R17,_pv_S100000B000
000482 b3e6      	IN   R30,0x16
000483 70e2      	ANDI R30,LOW(0x2)
000484 2fae      	MOV  R26,R30
000485 b3e0      	IN   R30,0x10
000486 70e4      	ANDI R30,LOW(0x4)
000487 2bea      	OR   R30,R26
000488 93e0 0468 	STS  _pv_S100000B000,R30
00048a 17e1      	CP   R30,R17
00048b f481      	BRNE _0x20000FC
00048c 9100 0464 	LDS  R16,_status_G100
00048e 70e2      	ANDI R30,LOW(0x2)
00048f f011      	BREQ _0x20000FD
000490 6004      	ORI  R16,LOW(4)
000491 c001      	RJMP _0x20000FE
                 _0x20000FD:
000492 7f0b      	ANDI R16,LOW(251)
                 _0x20000FE:
000493 91e0 0468 	LDS  R30,_pv_S100000B000
000495 70e4      	ANDI R30,LOW(0x4)
000496 f011      	BREQ _0x20000FF
000497 6003      	ORI  R16,LOW(3)
000498 c001      	RJMP _0x2000100
                 _0x20000FF:
000499 7f0d      	ANDI R16,LOW(253)
                 _0x2000100:
00049a 9300 0464 	STS  _status_G100,R16
                 _0x20000FC:
00049c 9109      	LD   R16,Y+
00049d 9119      	LD   R17,Y+
00049e 9508      	RET
                 
                 	.CSEG
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _putchar:
00049f 93aa      	ST   -Y,R26
                 putchar0:
0004a0 9b5d           sbis usr,udre
0004a1 cffe           rjmp putchar0
0004a2 81e8           ld   r30,y
0004a3 b9ec           out  udr,r30
                 _0x20A0002:
0004a4 9621      	ADIW R28,1
0004a5 9508      	RET
                 _put_usart_G102:
0004a6 93ba      	ST   -Y,R27
0004a7 93aa      	ST   -Y,R26
0004a8 81aa      	LDD  R26,Y+2
0004a9 dff5      	RCALL _putchar
0004aa 81a8      	LD   R26,Y
0004ab 81b9      	LDD  R27,Y+1
0004ac 91ed      	LD   R30,X+
0004ad 91fd      	LD   R31,X+
0004ae 9631      	ADIW R30,1
0004af 93fe      	ST   -X,R31
0004b0 93ee      	ST   -X,R30
                 _0x20A0001:
0004b1 9623      	ADIW R28,3
0004b2 9508      	RET
                 __print_G102:
0004b3 93ba      	ST   -Y,R27
0004b4 93aa      	ST   -Y,R26
0004b5 9726      	SBIW R28,6
0004b6 940e 06a4 	CALL __SAVELOCR6
0004b8 e010      	LDI  R17,0
0004b9 85ac      	LDD  R26,Y+12
0004ba 85bd      	LDD  R27,Y+12+1
0004bb e0e0      	LDI  R30,LOW(0)
0004bc e0f0      	LDI  R31,HIGH(0)
0004bd 93ed      	ST   X+,R30
0004be 93fc      	ST   X,R31
                 _0x2040031:
0004bf 89ea      	LDD  R30,Y+18
0004c0 89fb      	LDD  R31,Y+18+1
0004c1 9631      	ADIW R30,1
0004c2 8bea      	STD  Y+18,R30
0004c3 8bfb      	STD  Y+18+1,R31
0004c4 9731      	SBIW R30,1
0004c5 91e4      	LPM  R30,Z
0004c6 2f2e      	MOV  R18,R30
0004c7 30e0      	CPI  R30,0
0004c8 f411      	BRNE PC+3
0004c9 940c 05e2 	JMP _0x2040033
0004cb 2fe1      	MOV  R30,R17
0004cc 30e0      	CPI  R30,0
0004cd f439      	BRNE _0x2040037
0004ce 3225      	CPI  R18,37
0004cf f411      	BRNE _0x2040038
0004d0 e011      	LDI  R17,LOW(1)
0004d1 c002      	RJMP _0x2040039
                 _0x2040038:
0004d2 940e 063b 	CALL SUBOPT_0x2
                 _0x2040039:
0004d4 c10c      	RJMP _0x2040036
                 _0x2040037:
0004d5 30e1      	CPI  R30,LOW(0x1)
0004d6 f4a9      	BRNE _0x204003A
0004d7 3225      	CPI  R18,37
0004d8 f419      	BRNE _0x204003B
0004d9 940e 063b 	CALL SUBOPT_0x2
0004db c104      	RJMP _0x20400EC
                 _0x204003B:
0004dc e012      	LDI  R17,LOW(2)
0004dd e040      	LDI  R20,LOW(0)
0004de e000      	LDI  R16,LOW(0)
0004df 322d      	CPI  R18,45
0004e0 f411      	BRNE _0x204003C
0004e1 e001      	LDI  R16,LOW(1)
0004e2 c0fe      	RJMP _0x2040036
                 _0x204003C:
0004e3 322b      	CPI  R18,43
0004e4 f411      	BRNE _0x204003D
0004e5 e24b      	LDI  R20,LOW(43)
0004e6 c0fa      	RJMP _0x2040036
                 _0x204003D:
0004e7 3220      	CPI  R18,32
0004e8 f411      	BRNE _0x204003E
0004e9 e240      	LDI  R20,LOW(32)
0004ea c0f6      	RJMP _0x2040036
                 _0x204003E:
0004eb c002      	RJMP _0x204003F
                 _0x204003A:
0004ec 30e2      	CPI  R30,LOW(0x2)
0004ed f439      	BRNE _0x2040040
                 _0x204003F:
0004ee e050      	LDI  R21,LOW(0)
0004ef e013      	LDI  R17,LOW(3)
0004f0 3320      	CPI  R18,48
0004f1 f411      	BRNE _0x2040041
0004f2 6800      	ORI  R16,LOW(128)
0004f3 c0ed      	RJMP _0x2040036
                 _0x2040041:
0004f4 c004      	RJMP _0x2040042
                 _0x2040040:
0004f5 30e3      	CPI  R30,LOW(0x3)
0004f6 f011      	BREQ PC+3
0004f7 940c 05e1 	JMP _0x2040036
                 _0x2040042:
0004f9 3320      	CPI  R18,48
0004fa f010      	BRLO _0x2040045
0004fb 332a      	CPI  R18,58
0004fc f008      	BRLO _0x2040046
                 _0x2040045:
0004fd c007      	RJMP _0x2040044
                 _0x2040046:
0004fe e0aa      	LDI  R26,LOW(10)
0004ff 9f5a      	MUL  R21,R26
000500 2d50      	MOV  R21,R0
000501 2fe2      	MOV  R30,R18
000502 53e0      	SUBI R30,LOW(48)
000503 0f5e      	ADD  R21,R30
000504 c0dc      	RJMP _0x2040036
                 _0x2040044:
000505 2fe2      	MOV  R30,R18
000506 36e3      	CPI  R30,LOW(0x63)
000507 f449      	BRNE _0x204004A
000508 940e 0642 	CALL SUBOPT_0x3
00050a 89e8      	LDD  R30,Y+16
00050b 89f9      	LDD  R31,Y+16+1
00050c 81a4      	LDD  R26,Z+4
00050d 93aa      	ST   -Y,R26
00050e 940e 0648 	CALL SUBOPT_0x4
000510 c0cf      	RJMP _0x204004B
                 _0x204004A:
000511 37e3      	CPI  R30,LOW(0x73)
000512 f441      	BRNE _0x204004D
000513 940e 0642 	CALL SUBOPT_0x3
000515 940e 064e 	CALL SUBOPT_0x5
000517 940e 060f 	CALL _strlen
000519 2f1e      	MOV  R17,R30
00051a c00a      	RJMP _0x204004E
                 _0x204004D:
00051b 37e0      	CPI  R30,LOW(0x70)
00051c f461      	BRNE _0x2040050
00051d 940e 0642 	CALL SUBOPT_0x3
00051f 940e 064e 	CALL SUBOPT_0x5
000521 940e 061b 	CALL _strlenf
000523 2f1e      	MOV  R17,R30
000524 6008      	ORI  R16,LOW(8)
                 _0x204004E:
000525 6002      	ORI  R16,LOW(2)
000526 770f      	ANDI R16,LOW(127)
000527 e030      	LDI  R19,LOW(0)
000528 c035      	RJMP _0x2040051
                 _0x2040050:
000529 36e4      	CPI  R30,LOW(0x64)
00052a f011      	BREQ _0x2040054
00052b 36e9      	CPI  R30,LOW(0x69)
00052c f411      	BRNE _0x2040055
                 _0x2040054:
00052d 6004      	ORI  R16,LOW(4)
00052e c002      	RJMP _0x2040056
                 _0x2040055:
00052f 37e5      	CPI  R30,LOW(0x75)
000530 f431      	BRNE _0x2040057
                 _0x2040056:
000531 e6e0      	LDI  R30,LOW(_tbl10_G102*2)
000532 e0f0      	LDI  R31,HIGH(_tbl10_G102*2)
000533 83ee      	STD  Y+6,R30
000534 83ff      	STD  Y+6+1,R31
000535 e015      	LDI  R17,LOW(5)
000536 c00d      	RJMP _0x2040058
                 _0x2040057:
000537 35e8      	CPI  R30,LOW(0x58)
000538 f411      	BRNE _0x204005A
000539 6008      	ORI  R16,LOW(8)
00053a c004      	RJMP _0x204005B
                 _0x204005A:
00053b 37e8      	CPI  R30,LOW(0x78)
00053c f011      	BREQ PC+3
00053d 940c 05e0 	JMP _0x204008C
                 _0x204005B:
00053f e6ea      	LDI  R30,LOW(_tbl16_G102*2)
000540 e0f0      	LDI  R31,HIGH(_tbl16_G102*2)
000541 83ee      	STD  Y+6,R30
000542 83ff      	STD  Y+6+1,R31
000543 e014      	LDI  R17,LOW(4)
                 _0x2040058:
000544 ff02      	SBRS R16,2
000545 c014      	RJMP _0x204005D
000546 940e 0642 	CALL SUBOPT_0x3
000548 940e 0658 	CALL SUBOPT_0x6
00054a 85ab      	LDD  R26,Y+11
00054b 23aa      	TST  R26
00054c f43a      	BRPL _0x204005E
00054d 85ea      	LDD  R30,Y+10
00054e 85fb      	LDD  R31,Y+10+1
00054f 940e 066e 	CALL __ANEGW1
000551 87ea      	STD  Y+10,R30
000552 87fb      	STD  Y+10+1,R31
000553 e24d      	LDI  R20,LOW(45)
                 _0x204005E:
000554 3040      	CPI  R20,0
000555 f011      	BREQ _0x204005F
000556 5f1f      	SUBI R17,-LOW(1)
000557 c001      	RJMP _0x2040060
                 _0x204005F:
000558 7f0b      	ANDI R16,LOW(251)
                 _0x2040060:
000559 c004      	RJMP _0x2040061
                 _0x204005D:
00055a 940e 0642 	CALL SUBOPT_0x3
00055c 940e 0658 	CALL SUBOPT_0x6
                 _0x2040061:
                 _0x2040051:
00055e fd00      	SBRC R16,0
00055f c011      	RJMP _0x2040062
                 _0x2040063:
000560 1715      	CP   R17,R21
000561 f478      	BRSH _0x2040065
000562 ff07      	SBRS R16,7
000563 c008      	RJMP _0x2040066
000564 ff02      	SBRS R16,2
000565 c004      	RJMP _0x2040067
000566 7f0b      	ANDI R16,LOW(251)
000567 2f24      	MOV  R18,R20
000568 5011      	SUBI R17,LOW(1)
000569 c001      	RJMP _0x2040068
                 _0x2040067:
00056a e320      	LDI  R18,LOW(48)
                 _0x2040068:
00056b c001      	RJMP _0x2040069
                 _0x2040066:
00056c e220      	LDI  R18,LOW(32)
                 _0x2040069:
00056d 940e 063b 	CALL SUBOPT_0x2
00056f 5051      	SUBI R21,LOW(1)
000570 cfef      	RJMP _0x2040063
                 _0x2040065:
                 _0x2040062:
000571 2f31      	MOV  R19,R17
000572 ff01      	SBRS R16,1
000573 c017      	RJMP _0x204006A
                 _0x204006B:
000574 3030      	CPI  R19,0
000575 f0a1      	BREQ _0x204006D
000576 ff03      	SBRS R16,3
000577 c006      	RJMP _0x204006E
000578 81ee      	LDD  R30,Y+6
000579 81ff      	LDD  R31,Y+6+1
00057a 9125      	LPM  R18,Z+
00057b 83ee      	STD  Y+6,R30
00057c 83ff      	STD  Y+6+1,R31
00057d c005      	RJMP _0x204006F
                 _0x204006E:
00057e 81ae      	LDD  R26,Y+6
00057f 81bf      	LDD  R27,Y+6+1
000580 912d      	LD   R18,X+
000581 83ae      	STD  Y+6,R26
000582 83bf      	STD  Y+6+1,R27
                 _0x204006F:
000583 940e 063b 	CALL SUBOPT_0x2
000585 3050      	CPI  R21,0
000586 f009      	BREQ _0x2040070
000587 5051      	SUBI R21,LOW(1)
                 _0x2040070:
000588 5031      	SUBI R19,LOW(1)
000589 cfea      	RJMP _0x204006B
                 _0x204006D:
00058a c04b      	RJMP _0x2040071
                 _0x204006A:
                 _0x2040073:
00058b e320      	LDI  R18,LOW(48)
00058c 81ee      	LDD  R30,Y+6
00058d 81ff      	LDD  R31,Y+6+1
00058e 940e 0696 	CALL __GETW1PF
000590 87e8      	STD  Y+8,R30
000591 87f9      	STD  Y+8+1,R31
000592 81ee      	LDD  R30,Y+6
000593 81ff      	LDD  R31,Y+6+1
000594 9632      	ADIW R30,2
000595 83ee      	STD  Y+6,R30
000596 83ff      	STD  Y+6+1,R31
                 _0x2040075:
000597 85e8      	LDD  R30,Y+8
000598 85f9      	LDD  R31,Y+8+1
000599 85aa      	LDD  R26,Y+10
00059a 85bb      	LDD  R27,Y+10+1
00059b 17ae      	CP   R26,R30
00059c 07bf      	CPC  R27,R31
00059d f050      	BRLO _0x2040077
00059e 5f2f      	SUBI R18,-LOW(1)
00059f 85a8      	LDD  R26,Y+8
0005a0 85b9      	LDD  R27,Y+8+1
0005a1 85ea      	LDD  R30,Y+10
0005a2 85fb      	LDD  R31,Y+10+1
0005a3 1bea      	SUB  R30,R26
0005a4 0bfb      	SBC  R31,R27
0005a5 87ea      	STD  Y+10,R30
0005a6 87fb      	STD  Y+10+1,R31
0005a7 cfef      	RJMP _0x2040075
                 _0x2040077:
0005a8 332a      	CPI  R18,58
0005a9 f028      	BRLO _0x2040078
0005aa ff03      	SBRS R16,3
0005ab c002      	RJMP _0x2040079
0005ac 5f29      	SUBI R18,-LOW(7)
0005ad c001      	RJMP _0x204007A
                 _0x2040079:
0005ae 5d29      	SUBI R18,-LOW(39)
                 _0x204007A:
                 _0x2040078:
0005af fd04      	SBRC R16,4
0005b0 c01a      	RJMP _0x204007C
0005b1 3321      	CPI  R18,49
0005b2 f420      	BRSH _0x204007E
0005b3 85a8      	LDD  R26,Y+8
0005b4 85b9      	LDD  R27,Y+8+1
0005b5 9711      	SBIW R26,1
0005b6 f409      	BRNE _0x204007D
                 _0x204007E:
0005b7 c009      	RJMP _0x20400ED
                 _0x204007D:
0005b8 1753      	CP   R21,R19
0005b9 f010      	BRLO _0x2040082
0005ba ff00      	SBRS R16,0
0005bb c001      	RJMP _0x2040083
                 _0x2040082:
0005bc c013      	RJMP _0x2040081
                 _0x2040083:
0005bd e220      	LDI  R18,LOW(32)
0005be ff07      	SBRS R16,7
0005bf c00b      	RJMP _0x2040084
0005c0 e320      	LDI  R18,LOW(48)
                 _0x20400ED:
0005c1 6100      	ORI  R16,LOW(16)
0005c2 ff02      	SBRS R16,2
0005c3 c007      	RJMP _0x2040085
0005c4 7f0b      	ANDI R16,LOW(251)
0005c5 934a      	ST   -Y,R20
0005c6 940e 0648 	CALL SUBOPT_0x4
0005c8 3050      	CPI  R21,0
0005c9 f009      	BREQ _0x2040086
0005ca 5051      	SUBI R21,LOW(1)
                 _0x2040086:
                 _0x2040085:
                 _0x2040084:
                 _0x204007C:
0005cb 940e 063b 	CALL SUBOPT_0x2
0005cd 3050      	CPI  R21,0
0005ce f009      	BREQ _0x2040087
0005cf 5051      	SUBI R21,LOW(1)
                 _0x2040087:
                 _0x2040081:
0005d0 5031      	SUBI R19,LOW(1)
0005d1 85a8      	LDD  R26,Y+8
0005d2 85b9      	LDD  R27,Y+8+1
0005d3 9712      	SBIW R26,2
0005d4 f008      	BRLO _0x2040074
0005d5 cfb5      	RJMP _0x2040073
                 _0x2040074:
                 _0x2040071:
0005d6 ff00      	SBRS R16,0
0005d7 c008      	RJMP _0x2040088
                 _0x2040089:
0005d8 3050      	CPI  R21,0
0005d9 f031      	BREQ _0x204008B
0005da 5051      	SUBI R21,LOW(1)
0005db e2e0      	LDI  R30,LOW(32)
0005dc 93ea      	ST   -Y,R30
0005dd 940e 0648 	CALL SUBOPT_0x4
0005df cff8      	RJMP _0x2040089
                 _0x204008B:
                 _0x2040088:
                 _0x204008C:
                 _0x204004B:
                 _0x20400EC:
0005e0 e010      	LDI  R17,LOW(0)
                 _0x2040036:
0005e1 cedd      	RJMP _0x2040031
                 _0x2040033:
0005e2 85ac      	LDD  R26,Y+12
0005e3 85bd      	LDD  R27,Y+12+1
0005e4 940e 0692 	CALL __GETW1P
0005e6 940e 06ab 	CALL __LOADLOCR6
0005e8 9664      	ADIW R28,20
0005e9 9508      	RET
                 _printf:
0005ea 92ff      	PUSH R15
0005eb 2ef8      	MOV  R15,R24
0005ec 9726      	SBIW R28,6
0005ed 931a      	ST   -Y,R17
0005ee 930a      	ST   -Y,R16
0005ef 01de      	MOVW R26,R28
0005f0 9614      	ADIW R26,4
0005f1 940e 066a 	CALL __ADDW2R15
0005f3 018d      	MOVW R16,R26
0005f4 e0e0      	LDI  R30,LOW(0)
0005f5 83ec      	STD  Y+4,R30
0005f6 83ed      	STD  Y+4+1,R30
0005f7 83ee      	STD  Y+6,R30
0005f8 83ef      	STD  Y+6+1,R30
0005f9 01de      	MOVW R26,R28
0005fa 9618      	ADIW R26,8
0005fb 940e 066a 	CALL __ADDW2R15
0005fd 940e 0692 	CALL __GETW1P
0005ff 93fa      	ST   -Y,R31
000600 93ea      	ST   -Y,R30
000601 931a      	ST   -Y,R17
000602 930a      	ST   -Y,R16
000603 eae6      	LDI  R30,LOW(_put_usart_G102)
000604 e0f4      	LDI  R31,HIGH(_put_usart_G102)
000605 93fa      	ST   -Y,R31
000606 93ea      	ST   -Y,R30
000607 01de      	MOVW R26,R28
000608 9618      	ADIW R26,8
000609 dea9      	RCALL __print_G102
00060a 8119      	LDD  R17,Y+1
00060b 8108      	LDD  R16,Y+0
00060c 9628      	ADIW R28,8
00060d 90ff      	POP  R15
00060e 9508      	RET
                 
                 	.CSEG
                 _strlen:
00060f 93ba      	ST   -Y,R27
000610 93aa      	ST   -Y,R26
000611 91a9          ld   r26,y+
000612 91b9          ld   r27,y+
000613 27ee          clr  r30
000614 27ff          clr  r31
                 strlen0:
000615 916d          ld   r22,x+
000616 2366          tst  r22
000617 f011          breq strlen1
000618 9631          adiw r30,1
000619 cffb          rjmp strlen0
                 strlen1:
00061a 9508          ret
                 _strlenf:
00061b 93ba      	ST   -Y,R27
00061c 93aa      	ST   -Y,R26
00061d 27aa          clr  r26
00061e 27bb          clr  r27
00061f 91e9          ld   r30,y+
000620 91f9          ld   r31,y+
                 strlenf0:
000621 9005      	lpm  r0,z+
000622 2000          tst  r0
000623 f011          breq strlenf1
000624 9611          adiw r26,1
000625 cffb          rjmp strlenf0
                 strlenf1:
000626 01fd          movw r30,r26
000627 9508          ret
                 
                 	.CSEG
                 
                 	.DSEG
                 _prtc_get_time:
000260           	.BYTE 0x2
                 _prtc_get_date:
000262           	.BYTE 0x2
                 _buffer:
000264           	.BYTE 0x200
                 _status_G100:
000464           	.BYTE 0x1
                 _timer1_G100:
000465           	.BYTE 0x1
                 _timer2_G100:
000466           	.BYTE 0x1
                 _card_type_G100:
000467           	.BYTE 0x1
                 _pv_S100000B000:
000468           	.BYTE 0x1
                 _FatFs_G101:
000469           	.BYTE 0x2
                 _Fsid_G101:
00046b           	.BYTE 0x2
                 _Drive_G101:
00046d           	.BYTE 0x1
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x0:
000628 2de4      	MOV  R30,R4
000629 e0f0      	LDI  R31,0
00062a 59ec      	SUBI R30,LOW(-_buffer)
00062b 4ffd      	SBCI R31,HIGH(-_buffer)
00062c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x1:
00062d e0e0      	LDI  R30,LOW(0)
00062e 93ea      	ST   -Y,R30
00062f e6e4      	LDI  R30,LOW(_buffer)
000630 e0f2      	LDI  R31,HIGH(_buffer)
000631 93fa      	ST   -Y,R31
000632 93ea      	ST   -Y,R30
                +
000633 eee8     +LDI R30 , LOW ( 0x3E8 )
000634 e0f3     +LDI R31 , HIGH ( 0x3E8 )
000635 e060     +LDI R22 , BYTE3 ( 0x3E8 )
000636 e070     +LDI R23 , BYTE4 ( 0x3E8 )
                 	__GETD1N 0x3E8
000637 940e 069a 	CALL __PUTPARD1
000639 e0a1      	LDI  R26,LOW(1)
00063a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x2:
00063b 932a      	ST   -Y,R18
00063c 85ad      	LDD  R26,Y+13
00063d 85be      	LDD  R27,Y+13+1
00063e 85ef      	LDD  R30,Y+15
00063f 89f8      	LDD  R31,Y+15+1
000640 9509      	ICALL
000641 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x3:
000642 89e8      	LDD  R30,Y+16
000643 89f9      	LDD  R31,Y+16+1
000644 9734      	SBIW R30,4
000645 8be8      	STD  Y+16,R30
000646 8bf9      	STD  Y+16+1,R31
000647 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x4:
000648 85ad      	LDD  R26,Y+13
000649 85be      	LDD  R27,Y+13+1
00064a 85ef      	LDD  R30,Y+15
00064b 89f8      	LDD  R31,Y+15+1
00064c 9509      	ICALL
00064d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x5:
00064e 89a8      	LDD  R26,Y+16
00064f 89b9      	LDD  R27,Y+16+1
000650 9614      	ADIW R26,4
000651 940e 0692 	CALL __GETW1P
000653 83ee      	STD  Y+6,R30
000654 83ff      	STD  Y+6+1,R31
000655 81ae      	LDD  R26,Y+6
000656 81bf      	LDD  R27,Y+6+1
000657 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x6:
000658 89a8      	LDD  R26,Y+16
000659 89b9      	LDD  R27,Y+16+1
00065a 9614      	ADIW R26,4
00065b 940e 0692 	CALL __GETW1P
00065d 87ea      	STD  Y+10,R30
00065e 87fb      	STD  Y+10+1,R31
00065f 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
000660 9610      	adiw r26,0
000661 f039      	breq __delay_ms1
                 __delay_ms0:
                +
000662 ed80     +LDI R24 , LOW ( 0x7D0 )
000663 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
000664 9701     +SBIW R24 , 1
000665 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
000666 95a8      	wdr
000667 9711      	sbiw r26,1
000668 f7c9      	brne __delay_ms0
                 __delay_ms1:
000669 9508      	ret
                 
                 __ADDW2R15:
00066a 2400      	CLR  R0
00066b 0daf      	ADD  R26,R15
00066c 1db0      	ADC  R27,R0
00066d 9508      	RET
                 
                 __ANEGW1:
00066e 95f1      	NEG  R31
00066f 95e1      	NEG  R30
000670 40f0      	SBCI R31,0
000671 9508      	RET
                 
                 __MULD12U:
000672 9f7a      	MUL  R23,R26
000673 2d70      	MOV  R23,R0
000674 9f6b      	MUL  R22,R27
000675 0d70      	ADD  R23,R0
000676 9ff8      	MUL  R31,R24
000677 0d70      	ADD  R23,R0
000678 9fe9      	MUL  R30,R25
000679 0d70      	ADD  R23,R0
00067a 9f6a      	MUL  R22,R26
00067b 2d60      	MOV  R22,R0
00067c 0d71      	ADD  R23,R1
00067d 9ffb      	MUL  R31,R27
00067e 0d60      	ADD  R22,R0
00067f 1d71      	ADC  R23,R1
000680 9fe8      	MUL  R30,R24
000681 0d60      	ADD  R22,R0
000682 1d71      	ADC  R23,R1
000683 2788      	CLR  R24
000684 9ffa      	MUL  R31,R26
000685 2df0      	MOV  R31,R0
000686 0d61      	ADD  R22,R1
000687 1f78      	ADC  R23,R24
000688 9feb      	MUL  R30,R27
000689 0df0      	ADD  R31,R0
00068a 1d61      	ADC  R22,R1
00068b 1f78      	ADC  R23,R24
00068c 9fea      	MUL  R30,R26
00068d 2de0      	MOV  R30,R0
00068e 0df1      	ADD  R31,R1
00068f 1f68      	ADC  R22,R24
000690 1f78      	ADC  R23,R24
000691 9508      	RET
                 
                 __GETW1P:
000692 91ed      	LD   R30,X+
000693 91fc      	LD   R31,X
000694 9711      	SBIW R26,1
000695 9508      	RET
                 
                 __GETW1PF:
000696 9005      	LPM  R0,Z+
000697 91f4      	LPM  R31,Z
000698 2de0      	MOV  R30,R0
000699 9508      	RET
                 
                 __PUTPARD1:
00069a 937a      	ST   -Y,R23
00069b 936a      	ST   -Y,R22
00069c 93fa      	ST   -Y,R31
00069d 93ea      	ST   -Y,R30
00069e 9508      	RET
                 
                 __PUTPARD2:
00069f 939a      	ST   -Y,R25
0006a0 938a      	ST   -Y,R24
0006a1 93ba      	ST   -Y,R27
0006a2 93aa      	ST   -Y,R26
0006a3 9508      	RET
                 
                 __SAVELOCR6:
0006a4 935a      	ST   -Y,R21
                 __SAVELOCR5:
0006a5 934a      	ST   -Y,R20
                 __SAVELOCR4:
0006a6 933a      	ST   -Y,R19
                 __SAVELOCR3:
0006a7 932a      	ST   -Y,R18
                 __SAVELOCR2:
0006a8 931a      	ST   -Y,R17
0006a9 930a      	ST   -Y,R16
0006aa 9508      	RET
                 
                 __LOADLOCR6:
0006ab 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
0006ac 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
0006ad 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
0006ae 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
0006af 8119      	LDD  R17,Y+1
0006b0 8108      	LD   R16,Y
0006b1 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega32 register use summary:
r0 :  23 r1 :   9 r2 :   0 r3 :   0 r4 :   8 r5 :   4 r6 :   0 r7 :   0 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   6 
r16:  54 r17:  58 r18:  41 r19:  30 r20:   9 r21:  17 r22:  21 r23:  20 
r24:  39 r25:  23 r26: 124 r27:  58 r28:  19 r29:   1 r30: 422 r31: 105 
x  :  20 y  : 302 z  :  15 
Registers used: 24 out of 35 (68.6%)

ATmega32 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   8 add   :  11 
adiw  :  24 and   :   0 andi  :  30 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :  50 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   8 
brlt  :   0 brmi  :   0 brne  :  57 brpl  :   1 brsh  :   4 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :  52 
cbi   :   6 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :  16 cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   0 
cp    :   6 cpc   :   1 cpi   :  83 cpse  :   0 dec   :   1 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 ijmp  :   0 
in    :  16 inc   :   2 jmp   :  28 ld    :  43 ldd   : 123 ldi   : 231 
lds   :  23 lpm   :  14 lsl   :   0 lsr   :   0 mov   :  26 movw  :  12 
mul   :  11 muls  :   0 mulsu :   0 neg   :   2 nop   :   0 or    :   1 
ori   :  10 out   :  56 pop   :   9 push  :   9 rcall :  36 ret   :  30 
reti  :   1 rjmp  : 130 rol   :   0 ror   :   0 sbc   :   1 sbci  :  10 
sbi   :   5 sbic  :   0 sbis  :  27 sbiw  :  15 sbr   :   0 sbrc  :   2 
sbrs  :  14 sec   :   0 seh   :   0 sei   :   1 sen   :   0 ser   :   0 
ses   :   0 set   :   0 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    : 113 std   :  46 sts   :  11 sub   :   1 subi  :  31 swap  :   0 
tst   :   3 wdr   :   1 
Instructions used: 54 out of 116 (46.6%)

ATmega32 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000d64   3134    294   3428   32768  10.5%
[.dseg] 0x000060 0x00046e      0    526    526    2143  24.5%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 5 warnings
